{"version":3,"file":"SimpleAlert.js","sourceRoot":"","sources":["../../src/components/SimpleAlert.tsx"],"names":[],"mappings":";;;;AAAA,uDAAqD;AACrD,4CAA6D;AAC7D,8FAA8D;AAE9D,gFAAgD;AAWhD,MAAM,WAAW,GACf,CAAC,QAAuB,EAAE,EAAE,CAC5B,CAAC,EACC,OAAO,EACP,OAAO,EACP,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,WAAW,GAAG,IAAI,EAClB,aAAa,GACmB,EAAsB,EAAE;IACxD,MAAM,YAAY,GAAG,IAAA,mBAAW,EAC9B,CAAC,SAAkB,EAAE,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,IAAI,CAAC,SAAS,IAAI,OAAO,QAAQ,KAAK,UAAU;YAAE,QAAQ,EAAE,CAAC;IAC/D,CAAC,EACD,CAAC,QAAQ,EAAE,OAAO,CAAC,CACpB,CAAC;IACF,MAAM,WAAW,GAAG,QAAQ;QAC1B,CAAC,CAAC;YACE,gBAAgB,EAAE,QAAQ;YAC1B,qBAAqB,EAAE,IAAI;YAC3B,kBAAkB,EAAE,IAAI;SACzB;QACH,CAAC,CAAC,EAAE,CAAC;IACP,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,aAAa,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;QACrC,CAAC,OAAO,IAAI,aAAa;YACvB,CAAC,CAAC,IAAA,qBAAW,EAAC;gBACV,SAAS,EAAE,aAAa;gBACxB,IAAI,EAAE,EAAE,IAAI,EAAE,mBAAmB,EAAE;aACpC,CAAC;YACJ,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CACpB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpB,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;IACxC,OAAO,CACL,8BAAC,YAAK,kBACJ,MAAM,EAAE,IAAI,EACZ,OAAO,EAAE,YAAY,EACrB,SAAS,EAAE,aAAa,EACxB,iBAAiB,EAAE,WAAW;QAC9B,6DAA6D;QAC7D,aAAa;QACb,SAAS,EAAE,KAAK,IACZ,WAAW;QAEf,uCACE,SAAS,EAAE,cAAO,CAAC,cAAc,EACjC,KAAK,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE;YAEjC,8BAAC,QAAQ,IACP,QAAQ,EACN,YAAY;oBACV,CAAC,CAAC;wBACE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CACpB,qCAAG,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,IAC/C,IAAI,CACH,CACL;qBACF;oBACH,CAAC,CAAC,EAAE,IAGP,OAAO,CACC;YACV,aAAa,IAAI,CAChB,8BAAC,eAAQ,IACP,OAAO,EAAE,OAAO,EAChB,KAAK,EAAC,kBAAkB,EACxB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,UAAU,CAAE,CAAC,CAAC,MAA2B,CAAC,OAAO,CAAC,GAEpD,CACH,CACG,CACA,CACT,CAAC;AACJ,CAAC,CAAC;AAEG,MAAM,MAAM,GAAG,CAAC,KAAY,EAAE,EAAE,CACrC,CAAC,MAAM,CAAC,QAAQ;IACd,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE;IAC/B,CAAC,CAAC,0DAAO,cAAc,IAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAChD,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAClB,IAAA,6BAAmB,EAAQ,cAAc,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CACzE,CAAC;AANS,QAAA,MAAM,UAMf;AAEJ,kBAAe,WAAW,CAAC","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Alert, Checkbox, Classes } from \"@blueprintjs/core\";\nimport createOverlayRender from \"../util/createOverlayRender\";\nimport type Marked from \"marked-react\";\nimport createBlock from \"../writes/createBlock\";\n\ntype Props = {\n  content: string;\n  onConfirm?: () => void;\n  confirmText?: string;\n  onCancel?: (() => void) | true;\n  externalLink?: boolean;\n  dontShowAgain?: string;\n};\n\nconst SimpleAlert =\n  (Markdown: typeof Marked) =>\n  ({\n    onClose,\n    content,\n    onConfirm,\n    onCancel,\n    externalLink,\n    confirmText = \"Ok\",\n    dontShowAgain,\n  }: Props & { onClose: () => void }): React.ReactElement => {\n    const alertOnClose = useCallback(\n      (confirmed: boolean) => {\n        onClose();\n        if (!confirmed && typeof onCancel === \"function\") onCancel();\n      },\n      [onCancel, onClose]\n    );\n    const cancelProps = onCancel\n      ? {\n          cancelButtonText: \"Cancel\",\n          canOutsideClickCancel: true,\n          canEscapeKeyCancel: true,\n        }\n      : {};\n    const [checked, setChecked] = useState(false);\n    const alerOnConfirm = useCallback(() => {\n      (checked && dontShowAgain\n        ? createBlock({\n            parentUid: dontShowAgain,\n            node: { text: \"Do not show again\" },\n          })\n        : Promise.resolve()\n      ).then(onConfirm);\n    }, [onConfirm, checked, dontShowAgain]);\n    return (\n      <Alert\n        isOpen={true}\n        onClose={alertOnClose}\n        onConfirm={alerOnConfirm}\n        confirmButtonText={confirmText}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        autoFocus={false}\n        {...cancelProps}\n      >\n        <div\n          className={Classes.ALERT_CONTENTS}\n          style={{ whiteSpace: \"pre-wrap\" }}\n        >\n          <Markdown\n            renderer={\n              externalLink\n                ? {\n                    link: (href, text) => (\n                      <a href={href} rel={\"noreferrer\"} target={\"_blank\"}>\n                        {text}\n                      </a>\n                    ),\n                  }\n                : {}\n            }\n          >\n            {content}\n          </Markdown>\n          {dontShowAgain && (\n            <Checkbox\n              checked={checked}\n              label=\"Don't show again\"\n              onChange={(e) =>\n                setChecked((e.target as HTMLInputElement).checked)\n              }\n            />\n          )}\n        </div>\n      </Alert>\n    );\n  };\n\nexport const render = (props: Props) =>\n  (window.RoamLazy\n    ? window.RoamLazy.MarkedReact()\n    : import(\"marked-react\").then((r) => r.default)\n  ).then((Markdown) =>\n    createOverlayRender<Props>(\"simple-alert\", SimpleAlert(Markdown))(props)\n  );\n\nexport default SimpleAlert;\n"]}