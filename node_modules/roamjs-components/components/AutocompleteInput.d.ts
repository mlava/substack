import React from "react";
declare type FilterOptions<T> = (options: T[], query: string) => T[];
declare type OnNewItem<T> = (s: string) => T;
declare type ItemToQuery<T> = (t?: T) => string;
export declare type AutocompleteInputProps<T = string> = {
    value?: T;
    setValue: (q: T) => void;
    showButton?: boolean;
    onBlur?: (v: string) => void;
    onConfirm?: () => void;
    options?: T[];
    placeholder?: string;
    autoFocus?: boolean;
    multiline?: boolean;
    id?: string;
    filterOptions?: FilterOptions<T>;
    itemToQuery?: ItemToQuery<T>;
    renderItem?: (props: {
        item: T;
        onClick: () => void;
        active: boolean;
    }) => React.ReactElement;
    onNewItem?: OnNewItem<T>;
    disabled?: boolean;
    maxItemsDisplayed?: number;
};
declare const AutocompleteInput: <T extends unknown = string>({ value, setValue, onBlur, onConfirm, showButton, options, placeholder, autoFocus, multiline, id, filterOptions: _filterOptions, itemToQuery: _itemToQuery, renderItem, onNewItem: _onNewItem, disabled, maxItemsDisplayed, }: AutocompleteInputProps<T>) => React.ReactElement;
export default AutocompleteInput;
