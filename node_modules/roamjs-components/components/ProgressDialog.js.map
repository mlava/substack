{"version":3,"file":"ProgressDialog.js","sourceRoot":"","sources":["../../src/components/ProgressDialog.tsx"],"names":[],"mappings":";;;;AAAA,4CAA2C;AAC3C,uDAAgE;AAChE,8FAA8D;AAOjD,QAAA,EAAE,GAAG,6BAA6B,CAAC;AAEhD,MAAM,cAAc,GAAG,CAAC,EAKf,EAAE,EAAE;QALW,EACtB,OAAO,OAIA,EAHJ,KAAK,sBAFc,WAGvB,CADS;IAIR,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5D,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAA,gBAAQ,EAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,IAAA,mBAAW,EACtB,CAAC,KAAY,EAAE,EAAE;QACf,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;QAChD,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC,EACD,CAAC,aAAa,CAAC,CAChB,CAAC;IACF,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAE,CAAC,CAAC;QAC5C,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAc,EAAE,EAAE;gBAClD,IAAI,CAAC,CAAC,CAAC,MAAe,CAAC,CAAC;YAC1B,CAAC,CAAkB,CAAC,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,CAAC;SACb;QACD,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC7D,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;IAC7D,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,UAAU,KAAK,CAAC;YAAE,OAAO,EAAE,CAAC;IAClC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IACjB,OAAO,CACL;QACE,6CAAQ;;;;;;;;;;;;EAYZ,CAAS;QACL,8BAAC,aAAM,IACL,MAAM,EAAE,IAAI,EACZ,OAAO,EAAE,OAAO,EAChB,eAAe,EAAE,+BAA+B,EAChD,SAAS,EAAE,wBAAwB,EACnC,oBAAoB,EAAE,KAAK,EAC3B,iBAAiB,EAAE,KAAK,EACxB,WAAW,EAAE,KAAK,EAClB,YAAY,EAAE,KAAK;YAEnB,uCAAK,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;gBACzB,yEAAqC;gBACrC;;oBACa,yCAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAK;oBAAC,GAAG;;oBACZ,GAAG;oBACvD,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;kCAC7C,CACA,CACC,CACR,CACJ,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,MAAM,GAAG,IAAA,6BAAmB,EACvC,iBAAiB,EACjB,cAAc,CACf,CAAC;AAEF,kBAAe,cAAc,CAAC","sourcesContent":["import { Dialog } from \"@blueprintjs/core\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport createOverlayRender from \"../util/createOverlayRender\";\n\ntype Props = {\n  id: string;\n  timeout: number;\n};\n\nexport const ID = \"roamjs-progress-dialog-root\";\n\nconst ProgressDialog = ({\n  onClose,\n  ...props\n}: {\n  onClose: () => void;\n} & Props) => {\n  const [maxTimeout, setMaxtimeout] = useState(props.timeout);\n  const [now, setNow] = useState(new Date());\n  const onId = useCallback(\n    (props: Props) => {\n      window.roamjs.actions[props.id] = props.timeout;\n      setMaxtimeout(props.timeout);\n    },\n    [setMaxtimeout]\n  );\n  useEffect(() => {\n    const element = document.getElementById(ID);\n    if (element) {\n      element.addEventListener(\"log\", ((e: CustomEvent) => {\n        onId(e.detail as Props);\n      }) as EventListener);\n      onId(props);\n    }\n    const interval = setInterval(() => setNow(new Date()), 1000);\n    return () => clearInterval(interval);\n  }, [onId, setTimeout, props]);\n  const numActions = Object.keys(window.roamjs.actions).length;\n  useEffect(() => {\n    if (numActions === 0) onClose();\n  }, [numActions]);\n  return (\n    <>\n      <style>{`.roamjs-progress-dialog {\n  right: 8px;\n  margin: 0;\n  position: absolute;\n  bottom: 8px;\n}\n.roamjs-progress-dialog-portal .bp3-dialog-container,\n.roamjs-progress-dialog-portal .bp3-overlay {\n  pointer-events: none;\n}\n.roamjs-progress-dialog-portal .bp3-overlay-backdrop {\n  display: none;\n}`}</style>\n      <Dialog\n        isOpen={true}\n        onClose={onClose}\n        portalClassName={\"roamjs-progress-dialog-portal\"}\n        className={\"roamjs-progress-dialog\"}\n        canOutsideClickClose={false}\n        canEscapeKeyClose={false}\n        hasBackdrop={false}\n        enforceFocus={false}\n      >\n        <div style={{ padding: 16 }}>\n          <h4>Performing Writes to Roam...</h4>\n          <p>\n            Still have <b>{Object.keys(window.roamjs.actions).length}</b>{\" \"}\n            actions to write. Expected to finish the last one in{\" \"}\n            {Math.ceil((maxTimeout - now.valueOf()) / 1000)} seconds...\n          </p>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport const render = createOverlayRender<Props>(\n  \"progress-dialog\",\n  ProgressDialog\n);\n\nexport default ProgressDialog;\n"]}