"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@blueprintjs/core");
const react_1 = tslib_1.__importStar(require("react"));
const getFirstChildUidByBlockUid_1 = tslib_1.__importDefault(require("../../queries/getFirstChildUidByBlockUid"));
const idToTitle_1 = tslib_1.__importDefault(require("../../util/idToTitle"));
const createBlock_1 = tslib_1.__importDefault(require("../../writes/createBlock"));
const Description_1 = tslib_1.__importDefault(require("../Description"));
const BlocksPanel = ({ uid: initialUid, parentUid, title, defaultValue, description, }) => {
    const containerRef = (0, react_1.useRef)(null);
    const [navUid, setNavUid] = (0, react_1.useState)(initialUid || parentUid);
    (0, react_1.useEffect)(() => {
        if (containerRef.current) {
            const el = containerRef.current;
            (initialUid
                ? Promise.resolve(initialUid)
                : (0, createBlock_1.default)({ node: { text: title, children: [] }, parentUid }).then((uid) => {
                    setNavUid(uid);
                    return uid;
                }))
                .then((formatUid) => (0, getFirstChildUidByBlockUid_1.default)(formatUid)
                ? formatUid
                : ((defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.length)
                    ? Promise.all(defaultValue.map((node, order) => (0, createBlock_1.default)({
                        node,
                        parentUid: formatUid,
                        order,
                    })))
                    : (0, createBlock_1.default)({
                        node: { text: " " },
                        parentUid: formatUid,
                    })).then(() => formatUid))
                .then((uid) => {
                window.roamAlphaAPI.ui.components.renderBlock({
                    uid,
                    el,
                });
            });
        }
    }, [containerRef, defaultValue, setNavUid]);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(core_1.Label, null,
            (0, idToTitle_1.default)(title),
            react_1.default.createElement(Description_1.default, { description: description }),
            react_1.default.createElement(core_1.Tooltip, { content: "Click here to edit these blocks directly" },
                react_1.default.createElement(core_1.Button, { icon: "link", minimal: true, onClick: () => window.roamAlphaAPI.ui.mainWindow.openBlock({
                        block: { uid: navUid },
                    }) }))),
        react_1.default.createElement("style", null, `.roamjs-config-blocks > div > .rm-block-main {
    display: none;
  }
  
  .roamjs-config-blocks > div > .rm-block-children > .rm-multibar {
    display: none;
  }
  
  .roamjs-config-blocks > div > .rm-block-children {
    margin-left: -4px;
  }`),
        react_1.default.createElement("div", { ref: containerRef, style: {
                border: "1px solid #33333333",
                padding: "8px 0",
                borderRadius: 4,
            }, className: "roamjs-config-blocks" })));
};
BlocksPanel.type = "blocks";
exports.default = BlocksPanel;
//# sourceMappingURL=BlocksPanel.js.map