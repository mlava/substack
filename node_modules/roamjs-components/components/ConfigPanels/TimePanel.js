"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@blueprintjs/core");
const datetime_1 = require("@blueprintjs/datetime");
const format_1 = tslib_1.__importDefault(require("date-fns/format"));
const startOfDay_1 = tslib_1.__importDefault(require("date-fns/startOfDay"));
const react_1 = tslib_1.__importDefault(require("react"));
const idToTitle_1 = tslib_1.__importDefault(require("../../util/idToTitle"));
const Description_1 = tslib_1.__importDefault(require("../Description"));
const useSingleChildValue_1 = tslib_1.__importDefault(require("./useSingleChildValue"));
const TimePanel = ({ title, uid, parentUid, order, description, defaultValue = (0, startOfDay_1.default)(new Date()), }) => {
    const { value, onChange } = (0, useSingleChildValue_1.default)({
        defaultValue,
        title,
        uid,
        parentUid,
        order,
        transform: (s) => {
            const d = new Date();
            const [hours, minutes] = s.split(":");
            d.setHours(Number(hours));
            d.setMinutes(Number(minutes));
            return d;
        },
        toStr: (v) => (0, format_1.default)(v, "HH:mm"),
    });
    return (react_1.default.createElement(core_1.Label, null,
        (0, idToTitle_1.default)(title),
        react_1.default.createElement(Description_1.default, { description: description }),
        react_1.default.createElement(datetime_1.TimePicker, { value: value, onChange: onChange, showArrowButtons: true })));
};
TimePanel.type = "time";
exports.default = TimePanel;
//# sourceMappingURL=TimePanel.js.map