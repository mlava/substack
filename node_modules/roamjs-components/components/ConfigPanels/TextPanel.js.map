{"version":3,"file":"TextPanel.js","sourceRoot":"","sources":["../../../src/components/ConfigPanels/TextPanel.tsx"],"names":[],"mappings":";;;AAAA,4CAAsD;AACtD,0DAA0B;AAC1B,6EAA6C;AAC7C,yEAAyC;AAEzC,wFAAwD;AAExD,MAAM,SAAS,GAA0B,CAAC,EACxC,KAAK,EACL,GAAG,EACH,SAAS,EACT,KAAK,EACL,WAAW,EACX,YAAY,GAAG,EAAE,EACjB,OAAO,EAAE,EAAE,WAAW,GAAG,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,EAAE,GAC7D,EAAE,EAAE;IACH,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAA,6BAAmB,EAAC;QAC9C,YAAY;QACZ,KAAK;QACL,GAAG;QACH,SAAS;QACT,KAAK;QACL,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACnB,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KAChB,CAAC,CAAC;IACH,OAAO,CACL,8BAAC,YAAK;QACH,IAAA,mBAAS,EAAC,KAAK,CAAC;QACjB,8BAAC,qBAAW,IAAC,WAAW,EAAE,WAAW,GAAI;QACzC,8BAAC,iBAAU,IACT,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,CAAC,CAAsC,EAAE,EAAE;gBACnD,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACzB,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAG,CAAC,CAAC,CAAC;YACtB,CAAC,EACD,WAAW,EAAE,WAAW,GACxB,CACI,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC;AAExB,kBAAe,SAAS,CAAC","sourcesContent":["import { InputGroup, Label } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport idToTitle from \"../../util/idToTitle\";\nimport Description from \"../Description\";\nimport type { FieldPanel, TextField } from \"./types\";\nimport useSingleChildValue from \"./useSingleChildValue\";\n\nconst TextPanel: FieldPanel<TextField> = ({\n  title,\n  uid,\n  parentUid,\n  order,\n  description,\n  defaultValue = \"\",\n  options: { placeholder = \"\", onChange: parentOnChange } = {},\n}) => {\n  const { value, onChange } = useSingleChildValue({\n    defaultValue,\n    title,\n    uid,\n    parentUid,\n    order,\n    transform: (s) => s,\n    toStr: (s) => s,\n  });\n  return (\n    <Label>\n      {idToTitle(title)}\n      <Description description={description} />\n      <InputGroup\n        value={value}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          onChange(e.target.value);\n          parentOnChange?.(e);\n        }}\n        placeholder={placeholder}\n      />\n    </Label>\n  );\n};\n\nTextPanel.type = \"text\";\n\nexport default TextPanel;\n"]}