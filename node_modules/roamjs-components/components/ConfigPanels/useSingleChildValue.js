"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = require("react");
const getFirstChildUidByBlockUid_1 = tslib_1.__importDefault(require("../../queries/getFirstChildUidByBlockUid"));
const getTextByBlockUid_1 = tslib_1.__importDefault(require("../../queries/getTextByBlockUid"));
const useSingleChildValue = ({ defaultValue, uid: initialUid, title, parentUid, order, transform, toStr, }) => {
    const [uid, setUid] = (0, react_1.useState)(initialUid);
    const [valueUid, setValueUid] = (0, react_1.useState)(uid && (0, getFirstChildUidByBlockUid_1.default)(uid));
    const [value, setValue] = (0, react_1.useState)((valueUid && transform((0, getTextByBlockUid_1.default)(valueUid))) || defaultValue);
    const onChange = (0, react_1.useCallback)((v) => {
        setValue(v);
        if (valueUid) {
            window.roamAlphaAPI.updateBlock({
                block: { string: toStr(v), uid: valueUid },
            });
        }
        else if (uid) {
            const newValueUid = window.roamAlphaAPI.util.generateUID();
            window.roamAlphaAPI.createBlock({
                block: { string: toStr(v), uid: newValueUid },
                location: { order: 0, "parent-uid": uid },
            });
            setValueUid(newValueUid);
        }
        else {
            const newUid = window.roamAlphaAPI.util.generateUID();
            window.roamAlphaAPI.createBlock({
                block: { string: title, uid: newUid },
                location: { order, "parent-uid": parentUid },
            });
            setTimeout(() => setUid(newUid));
            const newValueUid = window.roamAlphaAPI.util.generateUID();
            window.roamAlphaAPI.createBlock({
                block: { string: toStr(v), uid: newValueUid },
                location: { order: 0, "parent-uid": newUid },
            });
            setValueUid(newValueUid);
        }
    }, [setValue, setValueUid, title, parentUid, order, uid, valueUid, setUid]);
    return { value, onChange };
};
exports.default = useSingleChildValue;
//# sourceMappingURL=useSingleChildValue.js.map