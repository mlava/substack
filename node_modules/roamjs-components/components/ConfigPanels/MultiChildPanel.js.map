{"version":3,"file":"MultiChildPanel.js","sourceRoot":"","sources":["../../../src/components/ConfigPanels/MultiChildPanel.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Button, Label } from \"@blueprintjs/core\";\nimport React, { useState } from \"react\";\nimport getShallowTreeByParentUid from \"../../queries/getShallowTreeByParentUid\";\nimport idToTitle from \"../../util/idToTitle\";\nimport Description from \"../Description\";\nimport type { FieldPanel, ArrayField } from \"./types\";\n\nconst MultiChildPanel: FieldPanel<\n  ArrayField,\n  {\n    InputComponent: (props: {\n      value: string;\n      setValue: (s: string) => void;\n    }) => React.ReactElement;\n  }\n> = ({\n  uid: initialUid,\n  title,\n  description,\n  order,\n  parentUid,\n  InputComponent,\n}) => {\n  const [uid, setUid] = useState(initialUid);\n  const [texts, setTexts] = useState(() =>\n    uid ? getShallowTreeByParentUid(uid) : []\n  );\n  const [value, setValue] = useState(\"\");\n  return (\n    <>\n      <Label>\n        {idToTitle(title)}\n        <Description description={description} />\n        <div style={{ display: \"flex\" }}>\n          <InputComponent value={value} setValue={setValue} />\n          <Button\n            icon={\"plus\"}\n            minimal\n            disabled={!value}\n            onClick={() => {\n              const valueUid = window.roamAlphaAPI.util.generateUID();\n              if (uid) {\n                window.roamAlphaAPI.createBlock({\n                  location: { \"parent-uid\": uid, order: texts.length },\n                  block: { string: value, uid: valueUid },\n                });\n              } else {\n                const newUid = window.roamAlphaAPI.util.generateUID();\n                window.roamAlphaAPI.createBlock({\n                  block: { string: title, uid: newUid },\n                  location: { order, \"parent-uid\": parentUid },\n                });\n                setTimeout(() => setUid(newUid));\n                window.roamAlphaAPI.createBlock({\n                  block: { string: value, uid: valueUid },\n                  location: { order: 0, \"parent-uid\": newUid },\n                });\n              }\n              setTexts([...texts, { text: value, uid: valueUid }]);\n              setValue(\"\");\n            }}\n          />\n        </div>\n      </Label>\n      {texts.map((p) => (\n        <div\n          key={p.uid}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <span\n            style={{\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n            }}\n          >\n            {p.text}\n          </span>\n          <Button\n            icon={\"trash\"}\n            minimal\n            onClick={() => {\n              window.roamAlphaAPI.deleteBlock({ block: { uid: p.uid } });\n              setTexts(texts.filter((f) => f.uid !== p.uid));\n            }}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nMultiChildPanel.type = \"custom\";\n\nexport default MultiChildPanel;\n"]}