{"version":3,"file":"SelectPanel.js","sourceRoot":"","sources":["../../../src/components/ConfigPanels/SelectPanel.tsx"],"names":[],"mappings":";;;AAAA,4CAA0C;AAC1C,uDAAuC;AACvC,6EAA6C;AAC7C,yEAAyC;AACzC,+EAA+C;AAE/C,wFAAwD;AAExD,MAAM,WAAW,GAA4B,CAAC,EAC5C,KAAK,EACL,GAAG,EACH,SAAS,EACT,KAAK,EACL,WAAW,EACX,YAAY,GAAG,EAAE,EACjB,OAAO,EAAE,EAAE,KAAK,EAAE,GACnB,EAAE,EAAE;IACH,MAAM,WAAW,GAAG,IAAA,eAAO,EACzB,GAAG,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EACrD,CAAC,KAAK,CAAC,CACR,CAAC;IACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAA,6BAAmB,EAAC;QAC9C,YAAY,EAAE,YAAY,IAAI,WAAW,CAAC,CAAC,CAAC;QAC5C,KAAK;QACL,GAAG;QACH,SAAS;QACT,KAAK;QACL,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACnB,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KAChB,CAAC,CAAC;IACH,OAAO,CACL,8BAAC,YAAK;QACH,IAAA,mBAAS,EAAC,KAAK,CAAC;QACjB,8BAAC,qBAAW,IAAC,WAAW,EAAE,WAAW,GAAI;QACzC,8BAAC,wBAAc,IACb,UAAU,EAAE,KAAK,EACjB,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAChC,KAAK,EAAE,WAAW,GAClB,CACI,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC;AAE5B,kBAAe,WAAW,CAAC","sourcesContent":["import { Label } from \"@blueprintjs/core\";\nimport React, { useMemo } from \"react\";\nimport idToTitle from \"../../util/idToTitle\";\nimport Description from \"../Description\";\nimport MenuItemSelect from \"../MenuItemSelect\";\nimport type { FieldPanel, SelectField } from \"./types\";\nimport useSingleChildValue from \"./useSingleChildValue\";\n\nconst SelectPanel: FieldPanel<SelectField> = ({\n  title,\n  uid,\n  parentUid,\n  order,\n  description,\n  defaultValue = \"\",\n  options: { items },\n}) => {\n  const optionItems = useMemo(\n    () => (typeof items === \"function\" ? items() : items),\n    [items]\n  );\n  const { value, onChange } = useSingleChildValue({\n    defaultValue: defaultValue || optionItems[0],\n    title,\n    uid,\n    parentUid,\n    order,\n    transform: (s) => s,\n    toStr: (s) => s,\n  });\n  return (\n    <Label>\n      {idToTitle(title)}\n      <Description description={description} />\n      <MenuItemSelect\n        activeItem={value}\n        onItemSelect={(e) => onChange(e)}\n        items={optionItems}\n      />\n    </Label>\n  );\n};\n\nSelectPanel.type = \"select\";\n\nexport default SelectPanel;\n"]}