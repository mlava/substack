{"version":3,"file":"BlockPanel.js","sourceRoot":"","sources":["../../../src/components/ConfigPanels/BlockPanel.tsx"],"names":[],"mappings":";;;AAAA,4CAA0C;AAC1C,uDAAiD;AACjD,kHAAkF;AAClF,6EAA6C;AAC7C,mFAAmD;AACnD,yEAAyC;AAGzC,MAAM,UAAU,GAA2B,CAAC,EAC1C,GAAG,EAAE,UAAU,EACf,SAAS,EACT,KAAK,EACL,YAAY,EACZ,WAAW,GACZ,EAAE,EAAE;IACH,MAAM,YAAY,GAAG,IAAA,cAAM,EAAC,IAAI,CAAC,CAAC;IAClC,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,YAAY,CAAC,OAAO,EAAE;YACxB,MAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC;YAChC,CAAC,UAAU;gBACT,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC7B,CAAC,CAAC,IAAA,qBAAW,EAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,CAClE;iBACE,IAAI,CACH,CAAC,SAAS,EAAE,EAAE,CACZ,IAAA,oCAA0B,EAAC,SAAS,CAAC;gBACrC,IAAA,qBAAW,EAAC;oBACV,IAAI,EAAE,YAAY,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE;oBACnC,SAAS,EAAE,SAAS;iBACrB,CAAC,CACL;iBACA,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;oBAC5C,GAAG;oBACH,EAAE;iBACH,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACN;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;IACjC,OAAO,CACL;QACE,8BAAC,YAAK;YACH,IAAA,mBAAS,EAAC,KAAK,CAAC;YACjB,8BAAC,qBAAW,IAAC,WAAW,EAAE,WAAW,GAAI,CACnC;QACR,uCACE,GAAG,EAAE,YAAY,EACjB,KAAK,EAAE;gBACL,MAAM,EAAE,qBAAqB;gBAC7B,OAAO,EAAE,OAAO;gBAChB,YAAY,EAAE,CAAC;aAChB,GACI,CACN,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC;AAE1B,kBAAe,UAAU,CAAC","sourcesContent":["import { Label } from \"@blueprintjs/core\";\nimport React, { useRef, useEffect } from \"react\";\nimport getFirstChildUidByBlockUid from \"../../queries/getFirstChildUidByBlockUid\";\nimport idToTitle from \"../../util/idToTitle\";\nimport createBlock from \"../../writes/createBlock\";\nimport Description from \"../Description\";\nimport type { FieldPanel, BlockField } from \"./types\";\n\nconst BlockPanel: FieldPanel<BlockField> = ({\n  uid: initialUid,\n  parentUid,\n  title,\n  defaultValue,\n  description,\n}) => {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (containerRef.current) {\n      const el = containerRef.current;\n      (initialUid\n        ? Promise.resolve(initialUid)\n        : createBlock({ node: { text: title, children: [] }, parentUid })\n      )\n        .then(\n          (formatUid) =>\n            getFirstChildUidByBlockUid(formatUid) ||\n            createBlock({\n              node: defaultValue || { text: \" \" },\n              parentUid: formatUid,\n            })\n        )\n        .then((uid) => {\n          window.roamAlphaAPI.ui.components.renderBlock({\n            uid,\n            el,\n          });\n        });\n    }\n  }, [containerRef, defaultValue]);\n  return (\n    <>\n      <Label>\n        {idToTitle(title)}\n        <Description description={description} />\n      </Label>\n      <div\n        ref={containerRef}\n        style={{\n          border: \"1px solid #33333333\",\n          padding: \"8px 0\",\n          borderRadius: 4,\n        }}\n      ></div>\n    </>\n  );\n};\n\nBlockPanel.type = \"block\";\n\nexport default BlockPanel;\n"]}