{"version":3,"file":"ExtensionApiContext.js","sourceRoot":"","sources":["../../src/components/ExtensionApiContext.tsx"],"names":[],"mappings":";;;;AAAA,sDAAsD;AACtD,uDAA0C;AAG1C,MAAM,mBAAmB,GAAG,eAAK,CAAC,aAAa,CAC7C,SAAS,CACV,CAAC;AAEK,MAAM,eAAe,GAAG,GAAG,EAAE,WAClC,OAAA,MAAA,IAAA,kBAAU,EAAC,mBAAmB,CAAC,0CAAE,YAAY,CAAA,EAAA,CAAC;AADnC,QAAA,eAAe,mBACoB;AACzC,MAAM,UAAU,GAAG,GAAG,EAAE,WAC7B,OAAA,MAAA,IAAA,kBAAU,EAAC,mBAAmB,CAAC,0CAAE,SAAS,CAAC,OAAO,CAAA,EAAA,CAAC;AADxC,QAAA,UAAU,cAC8B;AAErD,MAAM,2BAA2B,GAE7B,CAAC,EAAsB,EAAE,EAAE;QAA1B,EAAE,QAAQ,OAAY,EAAP,KAAK,sBAApB,YAAsB,CAAF;IACvB,OAAO,CACL,8BAAC,mBAAmB,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,IACvC,QAAQ,CACoB,CAChC,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,2BAA2B,CAAC","sourcesContent":["// @deprecated - use utils/extensionApiContext instead\nimport React, { useContext } from \"react\";\nimport { OnloadArgs } from \"../types\";\n\nconst ExtensionApiContext = React.createContext<OnloadArgs | undefined>(\n  undefined\n);\n\nexport const useExtensionAPI = () =>\n  useContext(ExtensionApiContext)?.extensionAPI;\nexport const useVersion = () =>\n  useContext(ExtensionApiContext)?.extension.version;\n\nconst ExtensionApiContextProvider: React.FC<\n  React.PropsWithChildren<OnloadArgs>\n> = ({ children, ...props }) => {\n  return (\n    <ExtensionApiContext.Provider value={props}>\n      {children}\n    </ExtensionApiContext.Provider>\n  );\n};\n\nexport default ExtensionApiContextProvider;\n"]}