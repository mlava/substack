{"version":3,"file":"FormDialog.js","sourceRoot":"","sources":["../../src/components/FormDialog.tsx"],"names":[],"mappings":";;;;AAAA,4CAW2B;AAC3B,uDAMe;AACf,6FAA6D;AAC7D,8FAA8D;AAE9D,sEAAsC;AACtC,8EAA8C;AAC9C,oEAAoC;AACpC,4DAA4B;AAC5B,gCAAiC;AAEjC,uGAAuE;AACvE,8EAA8C;AAC9C,sCAAwC;AACxC,oFAAoD;AAsDpD,MAAM,UAAU,GAAG,CAAC,EAClB,YAAY,EACZ,QAAQ,EACR,SAAS,GAKV,EAAE,EAAE;IACH,MAAM,YAAY,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,YAAY,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IACvE,MAAM,KAAK,GAAG,IAAA,cAAM,EAAiB,IAAI,CAAC,CAAC;IAC3C,MAAM,SAAS,GAAG,IAAA,eAAO,EAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACpE,MAAM,SAAS,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;QACjC,IAAI,CAAC,KAAK,CAAC,OAAO;YAAE,OAAO;QAC3B,IACE,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC;YAC9C,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC,aAAa;YAExC,OAAO;QACT,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,aAAa,CAEvC,oDAAoD,CAAC,CAAC;QACxD,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,EAAE,MAAK,mBAAmB;YACnC,IAAA,oBAAW,EAAC,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CACvD,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,CAC3B,CAAC;QACJ,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAA,aAAO,EAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,QAAQ;YACV,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,yBAAyB,CAAC;gBAC/C,QAAQ,EAAE;oBACR,WAAW,EAAE,QAAQ;oBACrB,WAAW,EAAE,QAAQ;iBACtB;aACF,CAAC,CAAC;IACP,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACZ,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC;QACzB,IAAI,EAAE,EAAE;YACN,IAAA,oBAAU,EAAC;gBACT,GAAG,EAAE,SAAS;gBACd,KAAK,EAAE,IAAA,gBAAM,GAAE;gBACf,IAAI,EAAE,YAAY;aACnB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACX,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;oBAC3C,GAAG,EAAE,SAAS;oBACd,EAAE;oBACF,YAAY,EAAE,IAAI;iBACnB,CAAC,CAAC;gBACH,IAAI,SAAS;oBAAE,SAAS,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,uEAAuE;YACvE,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAA,gCAAsB,EAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC;YAC3D,OAAO,GAAG,EAAE;gBACV,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YAC/D,CAAC,CAAC;SACH;QACD,gEAAgE;QAChE,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;IAClB,CAAC,EAAE;QACD,KAAK;QACL,YAAY;QACZ,SAAS;QACT,SAAS;QACT,SAAS;QACT,+BAA+B;QAC/B,WAAW;KACZ,CAAC,CAAC;IACH,OAAO,CACL;QACE,6CAAQ;;;;;;EAMZ,CAAS;QACL,uCACE,GAAG,EAAE,KAAK,EACV,SAAS,EAAC,iGAAiG,EAC3G,QAAQ,EAAE,CAAC,EACX,OAAO,EAAE,SAAS,EAClB,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;;gBACf,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK;oBAAE,OAAO;gBAC5B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,aAAO,EAAC,CAAC,CAAC,MAA6B,CAAC,CAAC;gBAC9D,IAAI,CAAC,QAAQ;oBAAE,OAAO;gBACtB,MAAM,EAAE,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,CAAC,gBAAgB,CAAC,EAAE,OAAO,EAAE,GAC5D,MAAM,CAAC,YAAY,CAAC,IAAI,CACtB,8CAA8C,EAC9C,CAAC,YAAY,EAAE,QAAQ,CAAC,CACZ,CAAC;gBACjB,IACE,CAAC,CACC,KAAK,KAAK,CAAC;oBACX,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,MAAK,CAAC;oBACrB,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,SAAS,CACvC;oBAED,OAAO;gBACT,CAAC,CAAC,eAAe,EAAE,CAAC;gBACpB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,MAAM,KAAK,GAAG,MAAA,KAAK,CAAC,OAAO,0CAAE,aAAa,CAAC;gBAC3C,IAAI,CAAC,KAAK;oBAAE,OAAO;gBACnB,MAAM,aAAa,GAAG,CAAC,CAAC,QAAQ;oBAC9B,CAAC,CAAC,KAAK,CAAC,sBAAsB;yBAC5B,MAAA,KAAK;6BACF,OAAO,CAAC,aAAa,CAAC,0CACrB,aAAa,CAAC,8CAA8C,CAAC,CAAA;oBACnE,CAAC,CAAC,KAAK,CAAC,kBAAkB;yBACxB,MAAA,KAAK;6BACF,OAAO,CAAC,aAAa,CAAC,0CACrB,aAAa,CACb,mDAAmD,CACpD,CAAA,CAAC;gBACR,IAAI,CAAC,aAAa;oBAAE,OAAO;gBAC3B,MAAM,UAAU,GAAG,oCAAoC,CAAC;gBACxD,IAAI,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC;oBAClC,aAA6B,CAAC,KAAK,EAAE,CAAC;;oBACpC,MAAA,aAAa,CAAC,aAAa,CAAc,UAAU,CAAC,0CAAE,KAAK,EAAE,CAAC;YACrE,CAAC,GACD,CACD,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,CAAoC,EACrD,KAAK,EACL,OAAO,EACP,MAAM,EACN,OAAO,EACP,QAAQ,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,EAClC,MAAM,GAAG,EAAE,EACX,gBAAgB,GAAG,QAAQ,EAC3B,gBAAgB,GAAG,QAAQ,EAC3B,YAAY,GACe,EAAE,EAAE;IAC/B,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC;IACvC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,IAAA,gBAAQ,EAC9B,GAAG,EAAE,CACH,MAAM,CAAC,WAAW,CAChB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;SACnB,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,CAAC;SAC9D,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAC7C,CACT,CAAC;IACF,MAAM,OAAO,GAAG,IAAA,mBAAW,EACzB,GAAG,EAAE,CACH,OAAO,CAAC,OAAO,CACb,QAAQ,CACN,MAAM,CAAC,WAAW,CAChB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;SACjB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE;QAChB,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC,CAAC;SACD,GAAG,CACF,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CACf,CAAC,GAAG,EAAE,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAU,CAChE,CACC,CACP,CACF;SACE,IAAI,CAAC,OAAO,CAAC;SACb,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;QACX,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACpB,UAAU,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,EACN,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CACtC,CAAC;IAEF,MAAM,kBAAkB,GAAG,CACzB,IAAY,EACZ,IAAsC,EACtC,EAAE;QACF,MAAM,UAAU,GAA2B;YACzC,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,IAAI,CAAC,IAAI;SAC7B,CAAC;QACF,IAAI,IAAI,CAAC,KAAK;YAAE,UAAU,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5D,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;IAEF,OAAO,CACL,8BAAC,aAAM,IACL,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,EACZ,YAAY,EAAE,CAAC,KAAK,IAAI,YAAY,EACpC,SAAS,EAAE,CAAC,KAAK;QAEjB,uCAAK,SAAS,EAAE,cAAO,CAAC,WAAW;YAChC,OAAO;YACP,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBAClD,MAAM,cAAc,GAAG,mBAAmB,CAAC;gBAC3C,MAAM,QAAQ,GAAG,IAAA,mBAAW,EAC1B,CAAC,KAAc,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,iCAAM,CAAC,KAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAG,CAAC,EAC7D,CAAC,OAAO,EAAE,IAAI,CAAC,CAChB,CAAC;gBACF,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;oBAC/C,OAAO,uCAAK,GAAG,EAAE,IAAI,GAAI,CAAC;iBAC3B;qBAAM,IACL,IAAI,CAAC,WAAW;oBAChB,IAAI,CAAC,iBAAiB;oBACtB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,QAAQ;oBAC1C,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAW,CAAC,EAClE;oBACA,OAAO,uCAAK,GAAG,EAAE,IAAI,GAAI,CAAC;iBAC3B;gBACD,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;oBACxB,OAAO,CACL,8BAAC,YAAK,kBACJ,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;wBAEjC,IAAI,CAAC,KAAK;wBACX,8BAAC,iBAAU,IACT,KAAK,EAAE,IAAI,CAAC,IAAI,CAAW,EAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EACzC,SAAS,EAAE,KAAK,KAAK,CAAC,GACtB,CACI,CACT,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBACjC,OAAO,CACL,8BAAC,YAAK,kBACJ,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;wBAEjC,IAAI,CAAC,KAAK;wBACX,8BAAC,mBAAY,IACX,KAAK,EAAE,IAAI,CAAC,IAAI,CAAW,EAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EACzC,SAAS,EAAE,KAAK,KAAK,CAAC,GACtB,CACI,CACT,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;oBAC/B,OAAO,CACL,qDACE,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,GAAG,cAAc,OAAO,IAC/B,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,GAEjC,IAAI,CAAC,KAAK,CACP,CACP,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;oBAC/B,OAAO,CACL,8BAAC,eAAQ,kBACP,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAW,EAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,QAAQ,CAAE,CAAC,CAAC,MAA2B,CAAC,OAAO,CAAC,EAElD,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,KAAK,KAAK,CAAC,EACtB,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,EAClC,CACH,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBACjC,OAAO,CACL,8BAAC,YAAK,kBACJ,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;wBAEjC,IAAI,CAAC,KAAK;wBACX,8BAAC,wBAAc,IACb,UAAU,EAAE,IAAI,CAAC,IAAI,CAAW,EAChC,YAAY,EAAE,QAAQ,EACtB,KAAK,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE,EACzB,WAAW,EAAE;gCACX,SAAS,EAAE,KAAK,KAAK,CAAC;6BACvB,GACD,CACI,CACT,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;oBAC/B,OAAO,CACL,8BAAC,YAAK,kBACJ,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;wBAEjC,IAAI,CAAC,KAAK;wBACX,8BAAC,mBAAS,IACR,GAAG,EAAE,IAAI,EACT,KAAK,EAAE,IAAI,CAAC,IAAI,CAAW,EAC3B,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,KAAK,KAAK,CAAC,GACtB,CACI,CACT,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;oBAChC,OAAO,CACL,8BAAC,YAAK,kBACJ,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;wBAEjC,IAAI,CAAC,KAAK;wBACX,8BAAC,oBAAU,IACT,KAAK,EACH,IAAA,2BAAiB,EAAC,IAAI,CAAC,IAAI,CAAW,CAAC;gCACtC,IAAI,CAAC,IAAI,CAAY,EAExB,QAAQ,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CACtB,QAAQ,CACN,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE;gCACnC,YAAY;gCACZ,GAAG,IAAI,EAAE;6BACV,CAAC;gCACA,CAAC,CAAC,GAAG;gCACL,CAAC,CAAC,IAAI,CACT,EAEH,SAAS,EAAE,KAAK,KAAK,CAAC,GACtB,CACI,CACT,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;oBACvC,OAAO,CACL,8BAAC,YAAK,kBACJ,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;wBAEjC,IAAI,CAAC,KAAK;wBACX,8BAAC,2BAAiB,IAChB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAW,EAC3B,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,KAAK,KAAK,CAAC,GACtB,CACI,CACT,CAAC;iBACH;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;oBAChC,OAAO,CACL,8BAAC,YAAK,kBACJ,GAAG,EAAE,IAAI,EACT,SAAS,EAAE,cAAc,IACrB,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC;wBAEjC,IAAI,CAAC,KAAK;wBACX,8BAAC,UAAU,IACT,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,KAAK,KAAK,CAAC,GACtB,CACI,CACT,CAAC;iBACH;qBAAM;oBACL,OAAO,uCAAK,GAAG,EAAE,IAAI,GAAI,CAAC;iBAC3B;YACH,CAAC,CAAC,CACE;QACN,uCAAK,SAAS,EAAE,cAAO,CAAC,aAAa;YACnC,uCACE,SAAS,EAAE,GAAG,cAAO,CAAC,qBAAqB,gCAAgC;gBAE3E,8BAAC,aAAM,IACL,IAAI,EAAE,gBAAgB,EACtB,MAAM,EAAE,aAAM,CAAC,OAAO,EACtB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,OAAO,EACjB,SAAS,EAAC,eAAe,GACzB;gBACF,8BAAC,aAAM,IACL,IAAI,EAAE,gBAAgB,EACtB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,OAAO,EACjB,SAAS,EAAC,6BAA6B,GACvC;gBACF,wCAAM,SAAS,EAAC,wBAAwB,IAAE,KAAK,CAAQ;gBACtD,OAAO,IAAI,8BAAC,cAAO,IAAC,IAAI,EAAE,kBAAW,CAAC,KAAK,GAAI,CAC5C,CACF,CACC,CACV,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,MAAM,GAAG,IAAA,6BAAmB,EACvC,aAAa,EACb,UAAU,CACX,CAAC;AAEK,MAAM,MAAM,GAAG,CAAC,EACrB,aAAa,EACb,QAAQ,EACR,KAAK,GAKN,EAAE,EAAE,CACH,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,EAAE,CAC9B,IAAA,cAAM,EAAC;IACL,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAe,CAAC;IACjD,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,EAAE;IAChE,KAAK;IACL,OAAO,EAAE,CACP,uCAAK,SAAS,EAAC,gDAAgD,IAC5D,QAAQ,CACL,CACP;CACF,CAAC,CACH,CAAC;AApBS,QAAA,MAAM,UAoBf;AAEJ,kBAAe,UAAU,CAAC","sourcesContent":["import {\n  Button,\n  Checkbox,\n  Classes,\n  Dialog,\n  InputGroup,\n  Intent,\n  Label,\n  NumericInput,\n  Spinner,\n  SpinnerSize,\n} from \"@blueprintjs/core\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport getTextByBlockUid from \"../queries/getTextByBlockUid\";\nimport createOverlayRender from \"../util/createOverlayRender\";\nimport type { RoamOverlayProps } from \"../util/renderOverlay\";\nimport BlockInput from \"./BlockInput\";\nimport MenuItemSelect from \"./MenuItemSelect\";\nimport PageInput from \"./PageInput\";\nimport nanoid from \"nanoid\";\nimport { getUids } from \"../dom\";\nimport { InputTextNode, PullBlock } from \"../types\";\nimport getFullTreeByParentUid from \"../queries/getFullTreeByParentUid\";\nimport createPage from \"../writes/createPage\";\nimport { createBlock } from \"../writes\";\nimport AutocompleteInput from \"./AutocompleteInput\";\n\ntype Props<T> = {\n  title?: React.ReactNode;\n  content?: React.ReactNode;\n  onSubmit?: (data: T) => Promise<unknown> | unknown;\n  submitButtonText?: string;\n  cancelButtonText?: string;\n  enforceFocus?: boolean;\n  fields?: Record<\n    string,\n    (\n      | {\n          defaultValue?: string;\n          type: \"text\";\n        }\n      | {\n          defaultValue?: string;\n          type: \"info\";\n        }\n      | {\n          defaultValue?: number;\n          type: \"number\";\n        }\n      | {\n          defaultValue?: string;\n          type: \"select\";\n          options?: string[];\n        }\n      | {\n          defaultValue?: string;\n          type: \"page\";\n        }\n      | {\n          defaultValue?: string;\n          type: \"block\";\n        }\n      | {\n          defaultValue?: string;\n          type: \"autocomplete\";\n          options?: string[];\n        }\n      | {\n          defaultValue?: boolean;\n          type: \"flag\";\n        }\n      | {\n          defaultValue?: InputTextNode[];\n          type: \"embed\";\n        }\n    ) & { label?: string; conditional?: string; conditionalValues?: string[] }\n  >;\n};\n\nconst EmbedInput = ({\n  defaultValue,\n  onChange,\n  autoFocus,\n}: {\n  defaultValue?: InputTextNode[];\n  onChange: (s: () => InputTextNode[]) => void;\n  autoFocus: boolean;\n}) => {\n  const defaultEmbed = useMemo(() => defaultValue || [], [defaultValue]);\n  const elRef = useRef<HTMLDivElement>(null);\n  const parentUid = useMemo(window.roamAlphaAPI.util.generateUID, []);\n  const realFocus = useCallback(() => {\n    if (!elRef.current) return;\n    if (\n      elRef.current.contains(document.activeElement) &&\n      elRef.current !== document.activeElement\n    )\n      return;\n    const block = elRef.current.querySelector<\n      HTMLDivElement | HTMLTextAreaElement\n    >(`div[id*=\"block-input\"],textarea[id*=\"block-input\"]`);\n    if (block?.id === \"block-input-ghost\")\n      createBlock({ parentUid, node: { text: \"\" } }).then(() =>\n        setTimeout(realFocus, 500)\n      );\n    const { windowId, blockUid } = getUids(block);\n    if (blockUid)\n      window.roamAlphaAPI.ui.setBlockFocusAndSelection({\n        location: {\n          \"block-uid\": blockUid,\n          \"window-id\": windowId,\n        },\n      });\n  }, [elRef]);\n  useEffect(() => {\n    const el = elRef.current;\n    if (el) {\n      createPage({\n        uid: parentUid,\n        title: nanoid(),\n        tree: defaultEmbed,\n      }).then(() => {\n        window.roamAlphaAPI.ui.components.renderPage({\n          uid: parentUid,\n          el,\n          hideMentions: true,\n        });\n        if (autoFocus) realFocus();\n      });\n      // In the future, we can return the whole tree of data from `parentUid`\n      onChange(() => getFullTreeByParentUid(parentUid).children);\n      return () => {\n        window.roamAlphaAPI.deletePage({ page: { uid: parentUid } });\n      };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    return () => {};\n  }, [\n    elRef,\n    defaultEmbed,\n    autoFocus,\n    realFocus,\n    parentUid,\n    // Triggering infinite rerender\n    // onChange\n  ]);\n  return (\n    <>\n      <style>{`div.rm-autocomplete__results {\n  z-index: 1000;\n}\n.roamjs-form-embed div div:has(> h1.rm-title-display),\n.roamjs-form-embed .rm-api-render--page > div:has(.rm-reference-main) {\n  display: none;\n}`}</style>\n      <div\n        ref={elRef}\n        className=\"rounded-md bg-white font-normal mt-1 bp3-input h-32 overflow-scroll roamjs-form-embed py-2 px-4\"\n        tabIndex={0}\n        onFocus={realFocus}\n        onKeyDown={(e) => {\n          if (e.key !== \"Tab\") return;\n          const { blockUid } = getUids(e.target as HTMLTextAreaElement);\n          if (!blockUid) return;\n          const { [\":block/order\"]: order, [\":block/parents\"]: parents } =\n            window.roamAlphaAPI.pull(\n              \"[:block/order {:block/parents [:block/uid]}]\",\n              [\":block/uid\", blockUid]\n            ) as PullBlock;\n          if (\n            !(\n              order === 0 &&\n              parents?.length === 1 &&\n              parents[0][\":block/uid\"] === parentUid\n            )\n          )\n            return;\n          e.stopPropagation();\n          e.preventDefault();\n          const label = elRef.current?.parentElement;\n          if (!label) return;\n          const nextElToFocus = e.shiftKey\n            ? label.previousElementSibling ||\n              label\n                .closest(\".bp3-dialog\")\n                ?.querySelector(\".bp3-dialog-footer .bp3-button.roamjs-cancel\")\n            : label.nextElementSibling ||\n              label\n                .closest(\".bp3-dialog\")\n                ?.querySelector(\n                  \".bp3-dialog-footer .bp3-button.bp3-intent-primary\"\n                );\n          if (!nextElToFocus) return;\n          const focusQuery = \"input,button,div.roamjs-form-embed\";\n          if (nextElToFocus.matches(focusQuery))\n            (nextElToFocus as HTMLElement).focus();\n          else nextElToFocus.querySelector<HTMLElement>(focusQuery)?.focus();\n        }}\n      />\n    </>\n  );\n};\n\nconst FormDialog = <T extends Record<string, unknown>>({\n  title,\n  content,\n  isOpen,\n  onClose,\n  onSubmit = () => Promise.resolve(),\n  fields = {},\n  submitButtonText = \"Submit\",\n  cancelButtonText = \"Cancel\",\n  enforceFocus,\n}: RoamOverlayProps<Props<T>>) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [data, setData] = useState<T>(\n    () =>\n      Object.fromEntries(\n        Object.entries(fields)\n          .filter(([, meta]) => typeof meta.defaultValue !== \"undefined\")\n          .map(([key, meta]) => [key, meta.defaultValue])\n      ) as T\n  );\n  const onClick = useCallback(\n    () =>\n      Promise.resolve(\n        onSubmit(\n          Object.fromEntries(\n            Object.entries(data)\n              .filter(([key]) => {\n                const { conditional } = fields[key];\n                return !conditional || !!data[conditional];\n              })\n              .map(\n                ([key, value]) =>\n                  [key, typeof value === \"function\" ? value() : value] as const\n              )\n          ) as T\n        )\n      )\n        .then(onClose)\n        .catch((e) => {\n          setError(e.message);\n          setLoading(false);\n        }),\n    [data, onClose, setError, setLoading]\n  );\n\n  const getFieldAttributes = (\n    name: string,\n    meta: { type: string; label?: string }\n  ) => {\n    const attributes: Record<string, string> = {\n      \"data-field-name\": name,\n      \"data-field-type\": meta.type,\n    };\n    if (meta.label) attributes[\"data-field-label\"] = meta.label;\n    return attributes;\n  };\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={title}\n      enforceFocus={!title || enforceFocus}\n      autoFocus={!title}\n    >\n      <div className={Classes.DIALOG_BODY}>\n        {content}\n        {Object.entries(fields).map(([name, meta], index) => {\n          const fieldClassName = `roamjs-form-field`;\n          const setValue = useCallback(\n            (value: unknown) => setData((d) => ({ ...d, [name]: value })),\n            [setData, name]\n          );\n          if (meta.conditional && !data[meta.conditional]) {\n            return <div key={name} />;\n          } else if (\n            meta.conditional &&\n            meta.conditionalValues &&\n            typeof data[meta.conditional] === \"string\" &&\n            !meta.conditionalValues.includes(data[meta.conditional] as string)\n          ) {\n            return <div key={name} />;\n          }\n          if (meta.type === \"text\") {\n            return (\n              <Label\n                key={name}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n                <InputGroup\n                  value={data[name] as string}\n                  onChange={(e) => setValue(e.target.value)}\n                  autoFocus={index === 0}\n                />\n              </Label>\n            );\n          } else if (meta.type === \"number\") {\n            return (\n              <Label\n                key={name}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n                <NumericInput\n                  value={data[name] as string}\n                  onChange={(e) => setValue(e.target.value)}\n                  autoFocus={index === 0}\n                />\n              </Label>\n            );\n          } else if (meta.type === \"info\") {\n            return (\n              <div\n                key={name}\n                className={`${fieldClassName} mb-4`}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n              </div>\n            );\n          } else if (meta.type === \"flag\") {\n            return (\n              <Checkbox\n                label={meta.label}\n                value={data[name] as string}\n                onChange={(e) =>\n                  setValue((e.target as HTMLInputElement).checked)\n                }\n                key={name}\n                autoFocus={index === 0}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              />\n            );\n          } else if (meta.type === \"select\") {\n            return (\n              <Label\n                key={name}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n                <MenuItemSelect\n                  activeItem={data[name] as string}\n                  onItemSelect={setValue}\n                  items={meta.options || []}\n                  ButtonProps={{\n                    autoFocus: index === 0,\n                  }}\n                />\n              </Label>\n            );\n          } else if (meta.type === \"page\") {\n            return (\n              <Label\n                key={name}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n                <PageInput\n                  key={name}\n                  value={data[name] as string}\n                  setValue={setValue}\n                  autoFocus={index === 0}\n                />\n              </Label>\n            );\n          } else if (meta.type === \"block\") {\n            return (\n              <Label\n                key={name}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n                <BlockInput\n                  value={\n                    getTextByBlockUid(data[name] as string) ||\n                    (data[name] as string)\n                  }\n                  setValue={(text, uid) =>\n                    setValue(\n                      window.roamAlphaAPI.pull(\"[:db/id]\", [\n                        \":block/uid\",\n                        uid || \"\",\n                      ])\n                        ? uid\n                        : text\n                    )\n                  }\n                  autoFocus={index === 0}\n                />\n              </Label>\n            );\n          } else if (meta.type === \"autocomplete\") {\n            return (\n              <Label\n                key={name}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n                <AutocompleteInput\n                  value={data[name] as string}\n                  options={meta.options}\n                  setValue={setValue}\n                  autoFocus={index === 0}\n                />\n              </Label>\n            );\n          } else if (meta.type === \"embed\") {\n            return (\n              <Label\n                key={name}\n                className={fieldClassName}\n                {...getFieldAttributes(name, meta)}\n              >\n                {meta.label}\n                <EmbedInput\n                  defaultValue={meta.defaultValue}\n                  onChange={setValue}\n                  autoFocus={index === 0}\n                />\n              </Label>\n            );\n          } else {\n            return <div key={name} />;\n          }\n        })}\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div\n          className={`${Classes.DIALOG_FOOTER_ACTIONS} items-center flex-row-reverse`}\n        >\n          <Button\n            text={submitButtonText}\n            intent={Intent.PRIMARY}\n            onClick={onClick}\n            disabled={loading}\n            className=\"flex-shrink-0\"\n          />\n          <Button\n            text={cancelButtonText}\n            onClick={onClose}\n            disabled={loading}\n            className=\"flex-shrink-0 roamjs-cancel\"\n          />\n          <span className=\"text-red-700 flex-grow\">{error}</span>\n          {loading && <Spinner size={SpinnerSize.SMALL} />}\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport const render = createOverlayRender<Props<Record<string, unknown>>>(\n  \"form-dialog\",\n  FormDialog\n);\n\nexport const prompt = ({\n  defaultAnswer,\n  question,\n  title,\n}: {\n  title: string;\n  question: string;\n  defaultAnswer: string;\n}) =>\n  new Promise<string>((resolve) =>\n    render({\n      onSubmit: (data) => resolve(data.value as string),\n      fields: { value: { type: \"text\", defaultValue: defaultAnswer } },\n      title,\n      content: (\n        <div className=\"whitespace-pre-wrap font-semibold text-lg mb-4\">\n          {question}\n        </div>\n      ),\n    })\n  );\n\nexport default FormDialog;\n"]}