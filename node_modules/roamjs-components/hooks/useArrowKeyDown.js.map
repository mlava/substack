{"version":3,"file":"useArrowKeyDown.js","sourceRoot":"","sources":["../../src/hooks/useArrowKeyDown.ts"],"names":[],"mappings":";;AAAA,iCAAqD;AAErD,MAAM,UAAU,GAAG,CAAC,EAAe,EAAE,EAAe,EAAE,EAAE;IACtD,MAAM,YAAY,GAAG,EAAE,CAAC,SAAS,CAAC;IAClC,MAAM,eAAe,GAAG,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC;IAEvD,MAAM,OAAO,GAAG,EAAE,CAAC,SAAS,CAAC;IAC7B,MAAM,UAAU,GAAG,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC;IAE7C,OAAO,UAAU,IAAI,eAAe,IAAI,OAAO,IAAI,YAAY,CAAC;AAClE,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAI,EAC1B,OAAO,EACP,OAAO,EACP,OAAO,GAKR,EAKC,EAAE;IACF,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IAClD,MAAM,SAAS,GAAG,IAAA,mBAAW,EAC3B,CAAC,CAA8D,EAAE,EAAE;QACjE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,CAAC,GAAG,KAAK,WAAW,EAAE;gBACzB,MAAM,QAAQ,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;gBACpD,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACzB,MAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC;gBAC3B,IAAI,EAAE,EAAE;oBACN,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAgB,CAAC;oBAChD,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;wBAC7B,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;qBAC1B;iBACF;gBACD,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;aACrB;iBAAM,IAAI,CAAC,CAAC,GAAG,KAAK,SAAS,EAAE;gBAC9B,MAAM,QAAQ,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;gBACrE,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACzB,MAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC;gBAC3B,IAAI,EAAE,EAAE;oBACN,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAgB,CAAC;oBAChD,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;wBAC7B,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;qBACzB;iBACF;gBACD,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;aACrB;SACF;QACD,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;YACrB,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;YAC9B,cAAc,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;SACrB;IACH,CAAC,EACD,CAAC,WAAW,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC,CAChD,CAAC;IACF,OAAO;QACL,WAAW;QACX,SAAS;KACV,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["import React, { useCallback, useState } from \"react\";\n\nconst isElInView = (el: HTMLElement, ul: HTMLElement) => {\n  const containerTop = ul.scrollTop;\n  const containerBottom = containerTop + ul.offsetHeight;\n\n  const elemTop = el.offsetTop;\n  const elemBottom = elemTop + el.offsetHeight;\n\n  return elemBottom <= containerBottom && elemTop >= containerTop;\n};\n\nconst useArrowKeyDown = <T>({\n  results,\n  onEnter,\n  menuRef,\n}: {\n  results: T[];\n  onEnter: (i: T) => void;\n  menuRef: React.RefObject<HTMLUListElement>;\n}): {\n  activeIndex: number;\n  onKeyDown: (\n    e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n} => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const onKeyDown = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      if (results.length > 0) {\n        if (e.key === \"ArrowDown\") {\n          const newIndex = (activeIndex + 1) % results.length;\n          setActiveIndex(newIndex);\n          const ul = menuRef.current;\n          if (ul) {\n            const el = ul.children[newIndex] as HTMLElement;\n            if (el && !isElInView(el, ul)) {\n              el.scrollIntoView(false);\n            }\n          }\n          e.preventDefault();\n          e.stopPropagation();\n        } else if (e.key === \"ArrowUp\") {\n          const newIndex = (activeIndex + results.length - 1) % results.length;\n          setActiveIndex(newIndex);\n          const ul = menuRef.current;\n          if (ul) {\n            const el = ul.children[newIndex] as HTMLElement;\n            if (el && !isElInView(el, ul)) {\n              el.scrollIntoView(true);\n            }\n          }\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n      if (e.key === \"Enter\") {\n        onEnter(results[activeIndex]);\n        setActiveIndex(0);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    },\n    [activeIndex, setActiveIndex, results, onEnter]\n  );\n  return {\n    activeIndex,\n    onKeyDown,\n  };\n};\n\nexport default useArrowKeyDown;\n"]}