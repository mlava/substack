"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const formatRoamNode = (n) => {
    var _a, _b, _c;
    if (!n)
        return {
            text: "",
            open: true,
            order: 0,
            uid: "",
            children: [],
            parents: [],
            heading: 0,
            viewType: "bullet",
            editTime: new Date(0),
            props: { imageResize: {}, iframe: {} },
            textAlign: "left",
        };
    const viewType = ((_c = (_b = (_a = (n[":block/parents"] || [])
        .find((a) => typeof a[":children/view-type"] === "string")) === null || _a === void 0 ? void 0 : _a[":children/view-type"]) === null || _b === void 0 ? void 0 : _b.replace) === null || _c === void 0 ? void 0 : _c.call(_b, /^:/, "")) || "bullet";
    return {
        text: n[":block/string"] || n[":node/title"] || "",
        open: typeof n[":block/open"] === "undefined" ? true : n[":block/open"],
        order: n[":block/order"] || 0,
        uid: n[":block/uid"] || "",
        heading: n[":block/heading"] || 0,
        viewType,
        editTime: new Date(n[":edit/time"] || 0),
        props: { imageResize: {}, iframe: {} },
        textAlign: n[":block/text-align"] || "left",
        children: (n[":block/children"] || [])
            .sort((a, b) => (a[":block/order"] || 0) - (b[":block/order"] || 0))
            .map(formatRoamNode),
        parents: (n[":block/parents"] || []).map((n) => (n === null || n === void 0 ? void 0 : n[":db/id"]) || 0),
    };
};
const getFullTreeByParentUid = (uid) => formatRoamNode(window.roamAlphaAPI.pull(`[
      :block/string 
      :node/title 
      :block/uid 
      :block/order 
      :block/heading 
      :block/open 
      :children/view-type
      :block/text-align
      :edit/time 
      :block/props
      {:block/parents [:children/view-type]}
      {:block/children ...}
    ]`, [`:block/uid`, uid]));
exports.default = getFullTreeByParentUid;
//# sourceMappingURL=getFullTreeByParentUid.js.map