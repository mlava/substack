{"version":3,"file":"getShallowTreeByParentUid.js","sourceRoot":"","sources":["../../src/queries/getShallowTreeByParentUid.ts"],"names":[],"mappings":";;AAEA,MAAM,yBAAyB,GAAG,CAChC,SAAiB,EACgB,EAAE,CAEjC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAC7B,mFAAmF,SAAS,6BAA6B,CAE5H;KACE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;KACzE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACb,GAAG,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE;IAC1B,IAAI,EAAE,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE;CAC/B,CAAC,CAAC,CAAC;AAER,kBAAe,yBAAyB,CAAC","sourcesContent":["import { PullBlock } from \"../types\";\n\nconst getShallowTreeByParentUid = (\n  parentUid: string\n): { uid: string; text: string }[] =>\n  (\n    window.roamAlphaAPI.data.fast.q(\n      `[:find (pull ?c [:block/uid :block/string :block/order]) :where [?b :block/uid \"${parentUid}\"] [?b :block/children ?c]]`\n    ) as [PullBlock][]\n  )\n    .sort((a, b) => (a[0][\":block/order\"] || 0) - (b[0][\":block/order\"] || 0))\n    .map(([a]) => ({\n      uid: a[\":block/uid\"] || \"\",\n      text: a[\":block/string\"] || \"\",\n    }));\n\nexport default getShallowTreeByParentUid;\n"]}