{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/marked/index.ts"],"names":[],"mappings":"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","sourcesContent":["import XRegExp from \"xregexp\";\nimport refractor from \"refractor\";\nimport markdown from \"refractor/lang/markdown\";\nimport yaml from \"refractor/lang/yaml\";\nimport css from \"refractor/lang/css\";\nimport bash from \"refractor/lang/bash\";\nimport java from \"refractor/lang/java\";\nimport rust from \"refractor/lang/rust\";\nimport python from \"refractor/lang/python\";\nimport csharp from \"refractor/lang/csharp\";\nimport clojure from \"refractor/lang/clojure\";\nimport hcl from \"refractor/lang/hcl\";\nimport toHtml from \"hast-util-to-html\";\nimport type marked from \"marked\";\n\nrefractor.register(markdown);\nrefractor.register(yaml);\nrefractor.register(css);\nrefractor.register(bash);\nrefractor.register(java);\nrefractor.register(rust);\nrefractor.register(python);\nrefractor.register(csharp);\nrefractor.register(clojure);\nrefractor.register(hcl);\n\nconst RENDERED_TODO =\n  '<span><label class=\"check-container\"><input type=\"checkbox\" disabled=\"\"><span class=\"checkmark\"></span></label></span>';\nconst RENDERED_DONE =\n  '<span><label class=\"check-container\"><input type=\"checkbox\" checked=\"\" disabled=\"\"><span class=\"checkmark\"></span></label></span>';\n\nconst URL_REGEX =\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=$]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=$,]*)/;\nconst TODO_REGEX = /^{{(?:\\[\\[)?TODO(?:\\]\\])?}}/;\nconst DONE_REGEX = /^{{(?:\\[\\[)?DONE(?:\\]\\])?}}/;\nconst IFRAME_REGEX = new RegExp(\n  `^{{(?:\\\\[\\\\[)?iframe(?:\\\\]\\\\])?:\\\\s*(${URL_REGEX.source})}}`\n);\nconst BUTTON_REGEX =\n  /^{{(?:\\[\\[)?((?:(?!}}[^}])[\\w\\s-/])*)(?:\\]\\])?(?::(.*))?}}/;\nconst TAG_REGEX = /^#?\\[\\[(.*?)\\]\\]/;\nconst BLOCK_REF_REGEX = /^\\(\\((.*?)\\)\\)/;\nconst toAlias = (r: RegExp) =>\n  new RegExp(`^\\\\[([^\\\\]]*?)\\\\]\\\\(${r.source.substring(1)}\\\\)`);\nconst ALIAS_REGEX = toAlias(TAG_REGEX);\nconst ALIAS_REF_REGEX = toAlias(BLOCK_REF_REGEX);\nconst HASHTAG_REGEX = /^#([^\\s]*)/;\nconst ATTRIBUTE_REGEX = /^(.*?)::/;\nconst BOLD_REGEX = /^\\*\\*(.*?)\\*\\*/;\nconst ITALICS_REGEX = /^__(.*?)__/;\nconst HIGHLIGHT_REGEX = /^\\^\\^([^^]*)\\^\\^/;\nconst INLINE_STOP_REGEX =\n  /({{|\\*\\*([^*]+?)\\*\\*|__([^_]+?)__|~~([^_]+?)~~|\\^\\^([^^]+?)\\^\\^|#?\\[\\[(.*?)\\]\\]|#[^\\s]|\\(\\(.*?\\)\\)|\\[(.*?)\\]\\((.*?)\\))/;\nconst HR_REGEX = /^---$/;\nconst BQ_REGEX = /^(?:>|\\[\\[>\\]\\]) (.*)$/s;\nconst TWEET_STATUS_REGEX = /\\/status\\/(.*?)(?:\\?s=\\d*)?$/;\nconst HTML_REGEXES = [BUTTON_REGEX, BLOCK_REF_REGEX, HR_REGEX];\nconst HTML_WITH_CHILD_REGEXES = [\n  { rgx: BQ_REGEX, title: \"blockquote\" },\n  { rgx: HIGHLIGHT_REGEX, title: \"highlight\" },\n];\nconst CODESPAN_REGEX = new RegExp(\"^```([\\\\w]*)\\n(.*)```$\", \"s\");\n\nconst defaultComponents = (component: string, afterColon?: string) => {\n  const opts = afterColon?.trim?.() || \"\";\n  switch (component) {\n    case \"youtube\":\n    case \"video\":\n      return `<div class=\"rm-iframe-container\"><iframe src=\"${opts\n        .replace(\"youtu.be\", \"www.youtube.com/embed\")\n        .replace(\"watch?v=\", \"embed/\")\n        .replace(\n          \"vimeo.com\",\n          \"player.vimeo.com/video\"\n        )}\" class=\"rm-iframe rm-video-player\"></iframe></div>`;\n    case \"pdf\":\n      return `<div class=\"rm-iframe-container\"><iframe src=\"${opts}\" class=\"rm-iframe\"></iframe></div>`;\n    default:\n      return \"\";\n  }\n};\n\n// https://github.com/markedjs/marked/blob/d2347e9b9ae517d02138fa6a9844bd8d586acfeb/src/Tokenizer.js#L33-L59\nfunction indentCodeCompensation(raw: string, text: string) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split(\"\\n\")\n    .map((node) => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join(\"\\n\");\n}\n\nconst context: RoamContext = {\n  marked: {\n    parseInline: (s) => s,\n    lastSrc: \"\",\n    used: false,\n    lexInline: () => [],\n  },\n};\n\nconst opts: marked.marked.MarkedOptions = {\n  tokenizer: {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should accept boolean return value\n    tag(src) {\n      for (const r of HTML_REGEXES) {\n        const match = r.exec(src);\n        if (match) {\n          return {\n            type: \"html\",\n            raw: match[0],\n            text: match[0],\n          };\n        }\n      }\n      return false;\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should accept boolean return value\n    del(src: string) {\n      const match = /^~[^~]/.exec(src);\n      if (match) {\n        return {\n          type: \"text\",\n          raw: \"~\",\n          text: \"~\",\n        };\n      }\n      return false;\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should accept boolean return value\n    emStrong(src: string) {\n      const match = BOLD_REGEX.exec(src);\n      if (match && match[1]?.length) {\n        return {\n          type: \"strong\",\n          raw: match[0],\n          text: match[1],\n          tokens: context.marked.lexInline(match[1]),\n        };\n      }\n      const emMatch = ITALICS_REGEX.exec(src);\n      if (emMatch && emMatch[1]?.length) {\n        return {\n          type: \"em\",\n          raw: emMatch[0],\n          text: emMatch[1],\n          tokens: context.marked.lexInline(emMatch[1]),\n        };\n      }\n      return false;\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should accept boolean return value\n    fences(src: string) {\n      const newSrc = src.replace(/```$/, \"\\n```\");\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore should accept boolean return value\n      const rules = this.rules;\n      const cap = (rules.block.fences as RegExp).exec(\n        newSrc\n      ) as RegExpExecArray;\n      if (cap) {\n        const raw = cap[0];\n        const text = indentCodeCompensation(raw, cap[3] || \"\");\n\n        return {\n          type: \"code\",\n          raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text,\n        };\n      }\n      return false;\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should accept boolean return value\n    inlineText(src) {\n      if (src === context.marked.lastSrc) {\n        throw new Error(`Infinite loop on string ${src}`);\n      }\n      context.marked.lastSrc = src;\n      const attribute = ATTRIBUTE_REGEX.exec(src);\n      if (attribute) {\n        const raw = attribute[0];\n        const numberOfTicks = (raw.match(/([^`]`|`[^`])/g) || []).length;\n        if (numberOfTicks % 2 === 0) {\n          const page = attribute[1];\n          const href = context.pagesToHrefs?.(page);\n          const text = `${page}:`;\n          if (href) {\n            return {\n              type: \"strong\",\n              raw,\n              text,\n              tokens: [\n                {\n                  type: \"link\",\n                  raw: text,\n                  text,\n                  href,\n                  tokens: [\n                    {\n                      type: \"text\",\n                      raw: text,\n                      text,\n                    },\n                  ],\n                },\n              ],\n            };\n          } else {\n            return {\n              type: \"strong\",\n              raw,\n              text,\n              tokens: [\n                {\n                  type: \"text\",\n                  raw: text,\n                  text,\n                },\n              ],\n            };\n          }\n        }\n      }\n      const match = INLINE_STOP_REGEX.exec(src);\n      if (match) {\n        const raw = src.substring(0, match.index);\n        const tickMatch = raw.match(/([^`]`|`[^`])/g);\n        const numberOfTicks = (tickMatch || []).length;\n        if (numberOfTicks % 2 === 0) {\n          const index = numberOfTicks > 0 ? /`/.exec(raw)?.index : match.index;\n          return {\n            type: \"text\",\n            raw: src.substring(0, index),\n            text: src.substring(0, index),\n          };\n        }\n      }\n      return false;\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should accept boolean return value\n    codespan(src) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore should accept boolean return value\n      const cap = this.rules.inline.code.exec(src);\n      if (cap) {\n        if (cap[0].startsWith(\"```\")) {\n          return {\n            type: \"codespan\",\n            raw: cap[0],\n            text: cap[0],\n          };\n        }\n      }\n      return false;\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should accept boolean return value\n    link(src) {\n      // hijacking link for html elements with tokens\n      for (const { rgx, title } of HTML_WITH_CHILD_REGEXES) {\n        const match = rgx.exec(src);\n        if (match) {\n          return {\n            type: \"link\",\n            raw: match[0],\n            text: match[1],\n            title,\n            tokens: context.marked.lexInline(match[1]),\n          };\n        }\n      }\n\n      if (TAG_REGEX.test(src)) {\n        const match = XRegExp.matchRecursive(src, \"#?\\\\[\\\\[\", \"\\\\]\\\\]\", \"i\", {\n          valueNames: [\"between\", \"left\", \"match\", \"right\"],\n        });\n        const raw = match.map((m) => m.value).join(\"\");\n        if (context.pagesToHrefs) {\n          const text = match[1].value;\n          const href = context.pagesToHrefs(text);\n          if (href) {\n            return {\n              type: \"link\",\n              raw,\n              href,\n              text,\n              title: `tag:${text}`,\n              tokens: context.marked.lexInline(text),\n            };\n          } else {\n            return {\n              type: \"text\",\n              raw,\n              text,\n            };\n          }\n        } else {\n          return {\n            type: \"text\",\n            raw,\n            text: raw,\n          };\n        }\n      }\n\n      const hashMatch = HASHTAG_REGEX.exec(src);\n      if (hashMatch) {\n        const raw = hashMatch[0];\n        if (context.pagesToHrefs) {\n          const text = hashMatch[1];\n          const href = context.pagesToHrefs(text);\n          if (href) {\n            return {\n              type: \"link\",\n              raw,\n              href,\n              text,\n              title: `tag:${text}`,\n              tokens: context.marked.lexInline(text),\n            };\n          } else {\n            return {\n              type: \"text\",\n              raw,\n              text,\n            };\n          }\n        } else {\n          return {\n            type: \"text\",\n            raw,\n            text: raw,\n          };\n        }\n      }\n\n      const aliasMatch = ALIAS_REGEX.exec(src);\n      if (aliasMatch) {\n        const raw = aliasMatch[0];\n        if (context.pagesToHrefs) {\n          const text = aliasMatch[1];\n          const href = context.pagesToHrefs(aliasMatch[2]);\n          if (href) {\n            return {\n              type: \"link\",\n              raw,\n              href,\n              text,\n              title: \"alias\",\n              tokens: context.marked.lexInline(text),\n            };\n          } else {\n            return {\n              type: \"text\",\n              raw,\n              text,\n            };\n          }\n        } else {\n          return {\n            type: \"text\",\n            raw,\n            text: raw,\n          };\n        }\n      }\n\n      const aliasRefMatch = ALIAS_REF_REGEX.exec(src);\n      if (aliasRefMatch) {\n        const raw = aliasRefMatch[0];\n        const text = aliasRefMatch[1];\n        const ref = aliasRefMatch[2];\n        const href = context.pagesToHrefs?.(\n          context.blockReferences?.(ref)?.page || \"\",\n          ref\n        );\n        if (href) {\n          return {\n            type: \"link\",\n            raw,\n            href,\n            text,\n            title: \"alias\",\n            tokens: context.marked.lexInline(text),\n          };\n        } else {\n          return {\n            type: \"text\",\n            raw,\n            text,\n          };\n        }\n      }\n      return false;\n    },\n  },\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore should be optional\n  renderer: {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should allow false\n    link(href: string, title?: string | null, text?: string): string | false {\n      if (title === \"alias\") {\n        const html = (this as marked.Renderer).link(href, null, text || \"\");\n        if (html) {\n          return html.replace(\"href=\", 'class=\"rm-alias\" href=');\n        }\n      } else if (title?.startsWith(\"tag:\")) {\n        const html = (this as marked.Renderer).link(href, null, text || \"\");\n        if (html) {\n          return html.replace(\n            \"href=\",\n            `class=\"rm-page-ref\" data-tag=\"${title.substring(4)}\" href=`\n          );\n        }\n      } else if (title === \"highlight\") {\n        return `<span class=\"rm-highlight\">${text}</span>`;\n      } else if (title === \"blockquote\") {\n        return `<blockquote class=\"rm-bq\">${text}</blockquote>`;\n      } else if (href.startsWith(\"https://twitter.com\") && text === href) {\n        const tweetId = TWEET_STATUS_REGEX.exec(href)?.[1];\n        const options = {\n          dnt: false,\n          frame: false,\n          hideCard: false,\n          hideThread: true,\n          id: tweetId,\n          lang: \"en\",\n          theme: \"light\",\n          width: \"550px\",\n        };\n        if (tweetId) {\n          return `<div>\n  <iframe scrolling=\"no\" frameborder=\"0\" allowtransparency=\"true\" allowfullscreen=\"true\" class=\"\" style=\"position: static; visibility: visible; width: ${\n    options.width\n  }; height: ${\n            options.width\n          }; display: block; flex-grow: 1; pointer-events: auto;\" title=\"Twitter Tweet\" src=\"https://platform.twitter.com/embed/Tweet.html?${new URLSearchParams(\n            Object.fromEntries(\n              Object.entries(options).map(([k, v]) => [k, `${v}`])\n            )\n          )\n            .toString()\n            .replace(/&/g, \"&amp;\")}\" data-tweet-id=\"${tweetId}\"></iframe>\n  <script>const cs = document.currentScript;\nconst iframe = cs.previousElementSibling;\nconst tweetId = iframe.getAttribute('data-tweet-id');\nconst renderTweet = () => {\n  const container = cs.parentElement;\n  container.style.height = '${options.width}';\n  window['twttr'].ready().then(({widgets}) => \n    widgets.createTweetEmbed(tweetId, cs.parentElement, ${JSON.stringify(\n      options\n    )})).then(() => {\n      iframe.remove();\n      cs.remove();\n      container.style.height = 'unset';\n    });\n}\nconst twttr = window['twttr']\nif (!(twttr && twttr.ready)) {\n  var s = document.createElement('script');\n  s.setAttribute('src', \"https://platform.twitter.com/widgets.js\");\n  s.onload = renderTweet;\n  document.body.appendChild(s);\n} else {\n  renderTweet()\n}\n</script>\n</div>`;\n        }\n      }\n      return false;\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore should allow false\n    codespan(code: string) {\n      const match = CODESPAN_REGEX.exec(code);\n      if (match) {\n        const nodes = refractor.highlight(match[2], match[1]);\n        return `<pre><code class=\"language-${match[1]}\">${toHtml(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-ignore\n          nodes\n        )}</code></pre>`;\n      }\n      return false;\n    },\n    strong: (text: string) => `<span class=\"rm-bold\">${text}</span>`,\n    em: (text: string) => `<em class=\"rm-italics\">${text}</em>`,\n    html(text: string) {\n      if (TODO_REGEX.test(text)) {\n        return RENDERED_TODO;\n      } else if (DONE_REGEX.test(text)) {\n        return RENDERED_DONE;\n      } else if (HR_REGEX.test(text)) {\n        return \"<hr>\";\n      } else if (IFRAME_REGEX.test(text)) {\n        const match = IFRAME_REGEX.exec(text);\n        return `<div class=\"rm-iframe-container\"><iframe src=\"${match?.[1]}\" frameborder=\"0\" class=\"rm-iframe\"></iframe></div>`;\n      } else if (HIGHLIGHT_REGEX.test(text)) {\n        const match = HIGHLIGHT_REGEX.exec(text);\n        return `<span class=\"rm-highlight\">${match?.[1]}</span>`;\n      } else if (BUTTON_REGEX.test(text)) {\n        const match = BUTTON_REGEX.exec(text)?.[1] || \"\";\n        const afterColon = BUTTON_REGEX.exec(text)?.[2];\n\n        return (\n          context.components?.(match, afterColon) ||\n          defaultComponents(match, afterColon) ||\n          `<button class=\"bp3-button\">${match}</button>`\n        );\n      } else if (BLOCK_REF_REGEX.test(text)) {\n        const match = BLOCK_REF_REGEX.exec(text)?.[1] || \"\";\n\n        const blockRefInfo = context.blockReferences?.(match);\n        if (!blockRefInfo) {\n          return text;\n        }\n        const page = blockRefInfo.page || \"\";\n        const blockText =\n          context.marked.parseInline(blockRefInfo.text || \"\") || \"\";\n        if (!page) return blockText;\n        const href = context.pagesToHrefs?.(page, match);\n        return `<a class=\"rm-block-ref\" href=\"${href}\">${blockText}</a>`;\n      } else if (BQ_REGEX.test(text)) {\n        const match = BQ_REGEX.exec(text);\n        return `<blockquote class=\"rm-bq\">${match?.[1]}</blockquote>`;\n      } else {\n        return text;\n      }\n    },\n  },\n};\n\nexport type RoamContext = {\n  pagesToHrefs?: (page: string, uid?: string) => string;\n  components?: (c: string, ac?: string) => string | false;\n  blockReferences?: (ref: string) => { text: string; page: string };\n  marked: {\n    parseInline: (s: string) => string;\n    lastSrc: string;\n    used: boolean;\n    lexInline: typeof marked.marked.Lexer.lexInline;\n  };\n};\n\nconst contextualize =\n  (m: typeof marked) =>\n  <T>(getMethod: (m: typeof marked) => (text: string) => T) =>\n  (text: string, ctxt?: Omit<RoamContext, \"marked\">): T => {\n    context.blockReferences = ctxt?.blockReferences;\n    context.pagesToHrefs = ctxt?.pagesToHrefs;\n    context.components = ctxt?.components;\n    context.marked.parseInline = m.marked.parseInline;\n    context.marked.lexInline = m.marked.Lexer.lexInline;\n    context.marked.lastSrc = \"\";\n    if (!context.marked.used) {\n      m.marked.use(opts);\n      context.marked.used = true;\n    }\n    return getMethod(m)(text);\n  };\n\nconst wrapOnce =\n  <T>(getMethod: (m: typeof marked) => (text: string) => T) =>\n  (): Promise<(text: string, ctxt?: Omit<RoamContext, \"marked\">) => T> => {\n    return (\n      typeof window !== \"undefined\" && window.RoamLazy\n        ? window.RoamLazy.Marked()\n        : import(\"marked\")\n    ).then((m) => contextualize(m)(getMethod));\n  };\n\nexport const getInlineLexer = wrapOnce((m) => m.marked.Lexer.lexInline);\nexport const getLexer = wrapOnce((m) => m.marked.lexer);\nexport const getParseInline = wrapOnce((m) => m.marked.parseInline);\nexport const getParse = wrapOnce((m) => m.marked.parse);\n\nconst wrapEach =\n  <T>(getMethod: (m: typeof marked) => (text: string) => T) =>\n  (text: string, ctxt?: Omit<RoamContext, \"marked\">): Promise<T> => {\n    return (window.RoamLazy ? window.RoamLazy.Marked() : import(\"marked\")).then(\n      (m) => contextualize(m)(getMethod)(text, ctxt)\n    );\n  };\n\nexport const inlineLexer = wrapEach((m) => m.marked.Lexer.lexInline);\nexport const lexer = wrapEach((m) => m.marked.lexer);\nexport const parseInline = wrapEach((m) => m.marked.parseInline);\nexport const parse = wrapEach((m) => m.marked.parse);\nexport default wrapEach((m) => m.marked.parse);\n"]}