{"version":3,"file":"getWorkerClient.js","sourceRoot":"","sources":["../../src/util/getWorkerClient.ts"],"names":[],"mappings":";;;AAAA,MAAM,eAAe,GAAG,CAAC,EACvB,IAAI,EACJ,MAAM,GAIP,EAAE,EAAE;IACH,MAAM,SAAS,GAAI,QAAQ,CAAC,aAAmC,CAAC,GAAG,CAAC,OAAO,CACzE,aAAa,EACb,IAAI,IAAI,KAAK,CACd,CAAC;IAEF,MAAM,MAAM,GAAwC;QAClD,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,KAAK;KACZ,CAAC;IAEF,MAAM,SAAS,GAA6C,EAAE,CAAC;IAC/D,MAAM,gBAAgB,GAAG,GAAG,EAAE,CAC5B,KAAK,CAAC,SAAS,CAAC;SACb,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;SACrB,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;QACV,MAAM,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,EAAE;;YAC/B,MAAM,KAAsB,CAAC,CAAC,IAAI,EAA5B,EAAE,MAAM,OAAoB,EAAf,IAAI,sBAAjB,UAAmB,CAAS,CAAC;YACnC,MAAA,SAAS,CAAC,MAAM,CAAC,0DAAG,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC;QACF,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC/C,CAAC,CAAC;SACD,IAAI,CAAC,GAAG,EAAE;QACT,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,UAAU,IAAI,cAAc,CAAC,CAAC,CAAC;QACrE,OAAO,MAAM,CAAC,OAAO,CAAC;IACxB,CAAC,CAAC,CAAC;IACP,MAAM,eAAe,GAAG,GAAG,EAAE;;QAC3B,MAAA,MAAM,CAAC,OAAO,0CAAE,SAAS,EAAE,CAAC;IAC9B,CAAC,CAAC;IACF,MAAM,SAAS,GAAG,GAAoB,EAAE,CACtC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI;QAC3B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;QACjC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACtB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAC5B,UAAU,IAAI,cAAc,EAC5B,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAChD,CACF,CAAC;IACR,OAAO;QACL,SAAS;QACT,eAAe;QACf,gBAAgB;QAChB,SAAS;KACV,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["const getWorkerClient = ({\n  name,\n  onLoad,\n}: {\n  name: string;\n  onLoad?: () => Promise<void>;\n}) => {\n  const workerUrl = (document.currentScript as HTMLScriptElement).src.replace(\n    /\\/main\\.js$/,\n    `/${name}.js`\n  );\n\n  const worker: { current?: Worker; init: boolean } = {\n    current: undefined,\n    init: false,\n  };\n\n  const listeners: { [name: string]: (a: unknown) => void } = {};\n  const initializeWorker = () =>\n    fetch(workerUrl)\n      .then((r) => r.blob())\n      .then((r) => {\n        worker.current = new Worker(window.URL.createObjectURL(r));\n        worker.current.onmessage = (e) => {\n          const { method, ...data } = e.data;\n          listeners[method]?.(data);\n        };\n        return onLoad ? onLoad() : Promise.resolve();\n      })\n      .then(() => {\n        worker.init = true;\n        document.body.dispatchEvent(new Event(`roamjs:${name}-worker:init`));\n        return worker.current;\n      });\n  const terminateWorker = () => {\n    worker.current?.terminate();\n  };\n  const getWorker = (): Promise<Worker> =>\n    worker.current && worker.init\n      ? Promise.resolve(worker.current)\n      : new Promise((resolve) =>\n          document.body.addEventListener(\n            `roamjs:${name}-worker:init`,\n            () => worker.current && resolve(worker.current)\n          )\n        );\n  return {\n    getWorker,\n    terminateWorker,\n    initializeWorker,\n    listeners,\n  };\n};\n\nexport default getWorkerClient;\n"]}