export declare type HandleFetchArgs = {
    path?: string;
    domain?: string;
    href?: string;
    data?: Record<string, unknown> | Uint8Array;
    authorization?: string;
    anonymous?: boolean;
    headers?: Record<string, string>;
    buffer?: boolean;
};
declare type HandleFetch = <T extends Record<string, unknown> | ArrayBuffer>(transformArgs: (...info: [URL, RequestInit]) => Parameters<typeof fetch>, args: Pick<RequestInit, "method"> & Omit<HandleFetchArgs, "data">) => Promise<T>;
declare const handleFetch: HandleFetch;
export default handleFetch;
