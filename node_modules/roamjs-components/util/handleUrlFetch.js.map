{"version":3,"file":"handleUrlFetch.js","sourceRoot":"","sources":["../../src/util/handleUrlFetch.ts"],"names":[],"mappings":";;;AAAA,+BAAmC;AACnC,wEAA6D;AAE7D,MAAM,cAAc,GAClB,CAAC,MAAwB,EAAE,EAAE,CAC7B,CACE,IAA8B,EAC9B,KAA+B,EAC/B,EAAE;IACF,MAAM,KACJ,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EADzD,EAAE,IAAI,GAAG,EAAE,OAC8C,EADzC,SAAS,sBAAzB,QAA2B,CAC8B,CAAC;IAEhE,OAAO,IAAA,qBAAW,EAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAClC,IAAI,IAAA,gBAAU,GAAE,KAAK,aAAa,EAAE;YAClC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SACrC;QACD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CACtC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAW,CAAC,CACrC,CAAC;QACF,OAAO;YACL,GAAG;4CAEE,IAAI,KACP,MAAM;SAET,CAAC;IACJ,CAAC,EAAE,SAAS,CAAC,CAAC;AAChB,CAAC,CAAC;AAEJ,kBAAe,cAAc,CAAC","sourcesContent":["import { getNodeEnv } from \"./env\";\nimport handleFetch, { HandleFetchArgs } from \"./handleFetch\";\n\nconst handleUrlFetch =\n  (method: \"GET\" | \"DELETE\") =>\n  <T extends Record<string, unknown> | ArrayBuffer = Record<string, never>>(\n    args: string | HandleFetchArgs,\n    _data?: Record<string, unknown>\n  ) => {\n    const { data = {}, ...fetchArgs } =\n      typeof args === \"string\" ? { path: args, data: _data } : args;\n\n    return handleFetch<T>((url, init) => {\n      if (getNodeEnv() === \"development\") {\n        url.searchParams.set(\"dev\", \"true\");\n      }\n      Object.entries(data).forEach(([k, v]) =>\n        url.searchParams.set(k, v as string)\n      );\n      return [\n        url,\n        {\n          ...init,\n          method,\n        },\n      ];\n    }, fetchArgs);\n  };\n\nexport default handleUrlFetch;\n"]}