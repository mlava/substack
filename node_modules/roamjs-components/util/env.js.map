{"version":3,"file":"env.js","sourceRoot":"","sources":["../../src/util/env.ts"],"names":[],"mappings":";AAAA,oFAAoF;AACpF,yFAAyF;AACzF,oCAAoC;;;AAEpC,wFAAwF;AACxF,0BAA0B;AAEnB,MAAM,UAAU,GAAG,CAAC,YAAY,GAAG,YAAY,EAAE,EAAE;IACxD,IAAI;QACF,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY,CAAC;KAC7C;IAAC,WAAM;QACN,OAAO,YAAY,CAAC;KACrB;AACH,CAAC,CAAC;AANW,QAAA,UAAU,cAMrB;AAEK,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,IAAI;QACF,OAAO,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,IAAA,kBAAU,EAAC,EAAE,CAAC,CAAC;KAC5E;IAAC,WAAM;QACN,OAAO,IAAA,kBAAU,EAAC,EAAE,CAAC,CAAC;KACvB;AACH,CAAC,CAAC;AANW,QAAA,mBAAmB,uBAM9B;AAEK,MAAM,YAAY,GAAG,GAAG,EAAE;IAC/B,MAAM,YAAY,GAChB,IAAA,kBAAU,GAAE,KAAK,YAAY;QAC3B,CAAC,CAAC,2BAA2B;QAC7B,CAAC,CAAC,uBAAuB,CAAC;IAC9B,IAAI;QACF,OAAO,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,YAAY,CAAC;KAC5C;IAAC,WAAM;QACN,OAAO,YAAY,CAAC;KACrB;AACH,CAAC,CAAC;AAVW,QAAA,YAAY,gBAUvB;AAEK,MAAM,uBAAuB,GAAG,GAAG,EAAE;IAC1C,IAAI;QACF,OAAO,CACL,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,QAAQ,CACrC,CAAC;KACH;IAAC,WAAM;QACN,OAAO,QAAQ,CAAC;KACjB;AACH,CAAC,CAAC;AARW,QAAA,uBAAuB,2BAQlC","sourcesContent":["// Some developers may use roamjs-components without RoamJS scripting, in which case\n// envs wont be interpolated. best way to deal with that afaik is to try to get the value\n// catch defaulting to a known value\n\n// Cannot do a DRY approach either because bundlers need the full `process.env.VAR` text\n// outlined to be replaced\n\nexport const getNodeEnv = (defaultValue = \"production\") => {\n  try {\n    return process.env.NODE_ENV || defaultValue;\n  } catch {\n    return defaultValue;\n  }\n};\n\nexport const getRoamJSVersionEnv = () => {\n  try {\n    return process.env.ROAMJS_VERSION || process.env.VERSION || getNodeEnv(\"\");\n  } catch {\n    return getNodeEnv(\"\");\n  }\n};\n\nexport const getApiUrlEnv = () => {\n  const defaultValue =\n    getNodeEnv() === \"production\"\n      ? \"https://lambda.roamjs.com\"\n      : \"http://localhost:3003\";\n  try {\n    return process.env.API_URL || defaultValue;\n  } catch {\n    return defaultValue;\n  }\n};\n\nexport const getRoamJSExtensionIdEnv = () => {\n  try {\n    return (\n      process.env.PACKAGE_NAME || \"roamjs\"\n    );\n  } catch {\n    return \"roamjs\";\n  }\n};\n"]}