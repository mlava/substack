{"version":3,"file":"getSettingValuesFromTree.js","sourceRoot":"","sources":["../../src/util/getSettingValuesFromTree.ts"],"names":[],"mappings":";;;AACA,wEAAwC;AAExC,MAAM,wBAAwB,GAAG,CAAC,EAChC,IAAI,EACJ,GAAG,EACH,YAAY,GAAG,EAAE,GAKlB,EAAY,EAAE;IACb,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAA,qBAAW,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACpE,MAAM,KAAK,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ;QAC1B,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACzC,CAAC,CAAC,YAAY,CAAC;IACjB,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,kBAAe,wBAAwB,CAAC","sourcesContent":["import type { InputTextNode } from \"../types\";\nimport toFlexRegex from \"./toFlexRegex\";\n\nconst getSettingValuesFromTree = ({\n  tree,\n  key,\n  defaultValue = [],\n}: {\n  tree: InputTextNode[];\n  key: string;\n  defaultValue?: string[];\n}): string[] => {\n  const node = tree.find((s) => toFlexRegex(key).test(s.text.trim()));\n  const value = node?.children\n    ? node.children.map((t) => t.text.trim())\n    : defaultValue;\n  return value;\n};\n\nexport default getSettingValuesFromTree;\n"]}