{"version":3,"file":"registerExperimentalMode.js","sourceRoot":"","sources":["../../src/util/registerExperimentalMode.ts"],"names":[],"mappings":";;;AAAA,+CAA4D;AAC5D,2DAAkE;AAClE,sFAAsD;AACtD,gFAAgD;AAChD,gFAAgD;AAEhD,MAAM,wBAAwB,GAAG,CAAC,EAChC,OAAO,EACP,QAAQ,EACR,SAAS,GAKV,EAAE,EAAE;IACH,MAAM,KAAK,GAAG,OAAO;QACnB,CAAC,CAAC,sBAAsB,OAAO,EAAE;QACjC,CAAC,CAAC,0BAA0B,CAAC;IAC/B,MAAM,GAAG,GAAG,OAAO;QACjB,CAAC,CAAC,gBAAgB,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;QAC5D,CAAC,CAAC,cAAc,CAAC;IACnB,MAAM,8BAA8B,GAAG,CACrC,uBAAgC,EAChC,SAAkB,EAClB,EAAE;QACF,IAAI,uBAAuB,EAAE;YAC3B,QAAQ,CAAC,SAAS,CAAC,CAAC;YACpB,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC;gBAC/C,KAAK,EAAE,WAAW,KAAK,EAAE;gBACzB,QAAQ,EAAE,GAAG,EAAE;oBACb,IAAA,4BAAkB,EAAC,GAAG,CAAC,CAAC;oBACxB,8BAA8B,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC7C,IAAA,cAAW,EAAC;wBACV,EAAE,EAAE,cAAc;wBAClB,OAAO,EAAE,YAAY,KAAK,EAAE;qBAC7B,CAAC,CAAC;gBACL,CAAC;aACF,CAAC,CAAC;YACH,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,aAAa,CAAC;gBAClD,KAAK,EAAE,UAAU,KAAK,EAAE;aACzB,CAAC,CAAC;SACJ;aAAM;YACL,SAAS,CAAC,SAAS,CAAC,CAAC;YACrB,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC;gBAC/C,KAAK,EAAE,UAAU,KAAK,EAAE;gBACxB,QAAQ,EAAE,GAAG,EAAE;oBACb,IAAA,oBAAW,EAAC;wBACV,OAAO,EAAE;;mDAGP,OAAO;4BACL,CAAC,CAAC,mBAAmB,OAAO,EAAE;4BAC9B,CAAC,CAAC,+BACN,GAAG;wBACH,SAAS,EAAE,GAAG,EAAE;4BACd,IAAA,yBAAe,EAAC,GAAG,EAAE,MAAM,CAAC,CAAC;4BAC7B,8BAA8B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BAC5C,IAAA,cAAW,EAAC;gCACV,EAAE,EAAE,cAAc;gCAClB,OAAO,EAAE,WAAW,KAAK,EAAE;6BAC5B,CAAC,CAAC;wBACL,CAAC;wBACD,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC;gBACL,CAAC;aACF,CAAC,CAAC;YACH,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,aAAa,CAAC;gBAClD,KAAK,EAAE,WAAW,KAAK,EAAE;aAC1B,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;IACF,8BAA8B,CAAC,IAAA,yBAAe,EAAC,GAAG,CAAC,KAAK,MAAM,EAAE,IAAI,CAAC,CAAC;IACtE,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,kBAAe,wBAAwB,CAAC","sourcesContent":["import { render as renderToast } from \"../components/Toast\";\nimport { render as renderAlert } from \"../components/SimpleAlert\";\nimport localStorageRemove from \"./localStorageRemove\";\nimport localStorageSet from \"./localStorageSet\";\nimport localStorageGet from \"./localStorageGet\";\n\nconst registerExperimentalMode = ({\n  feature,\n  onEnable,\n  onDisable,\n}: {\n  feature?: string;\n  onEnable: (isInitial: boolean) => void;\n  onDisable: (isInitial: boolean) => void;\n}) => {\n  const label = feature\n    ? `RoamJS Experiment: ${feature}`\n    : \"RoamJS Experimental Mode\";\n  const key = feature\n    ? `experimental-${feature.toLowerCase().replace(/ /g, \"-\")}`\n    : \"experimental\";\n  const toggleExperimentalModeFeatures = (\n    experimentalOverlayMode: boolean,\n    isInitial: boolean\n  ) => {\n    if (experimentalOverlayMode) {\n      onEnable(isInitial);\n      window.roamAlphaAPI.ui.commandPalette.addCommand({\n        label: `Disable ${label}`,\n        callback: () => {\n          localStorageRemove(key);\n          toggleExperimentalModeFeatures(false, false);\n          renderToast({\n            id: \"experimental\",\n            content: `Disabled ${label}`,\n          });\n        },\n      });\n      window.roamAlphaAPI.ui.commandPalette.removeCommand({\n        label: `Enable ${label}`,\n      });\n    } else {\n      onDisable(isInitial);\n      window.roamAlphaAPI.ui.commandPalette.addCommand({\n        label: `Enable ${label}`,\n        callback: () => {\n          renderAlert({\n            content: `WARNING! Experimental features are not meant for public use for most users. Enabling has a higher likelihood of unintended consequences affecting your graph.\n\nAre you sure you want to enable the experimental ${\n              feature\n                ? `RoamJS feature: ${feature}`\n                : \"features of RoamJS extensions\"\n            }?`,\n            onConfirm: () => {\n              localStorageSet(key, \"true\");\n              toggleExperimentalModeFeatures(true, false);\n              renderToast({\n                id: \"experimental\",\n                content: `Enabled ${label}`,\n              });\n            },\n            onCancel: true,\n          });\n        },\n      });\n      window.roamAlphaAPI.ui.commandPalette.removeCommand({\n        label: `Disable ${label}`,\n      });\n    }\n  };\n  toggleExperimentalModeFeatures(localStorageGet(key) === \"true\", true);\n  return label;\n};\n\nexport default registerExperimentalMode;\n"]}