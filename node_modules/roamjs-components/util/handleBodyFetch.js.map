{"version":3,"file":"handleBodyFetch.js","sourceRoot":"","sources":["../../src/util/handleBodyFetch.ts"],"names":[],"mappings":";;;AAAA,+BAAmC;AACnC,wEAA6D;AAE7D,MAAM,eAAe,GACnB,CAAC,MAAsB,EAAE,EAAE,CAC3B,CACE,IAA8B,EAC9B,KAA+B,EAC/B,EAAE;IACF,MAAM,KACJ,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EADzD,EAAE,IAAI,OACmD,EAD9C,SAAS,sBAApB,QAAsB,CACmC,CAAC;IAEhE,OAAO,IAAA,qBAAW,EAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAClC,MAAM,IAAI,GACR,IAAI,YAAY,UAAU;YACxB,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,IAAA,gBAAU,GAAE,KAAK,aAAa;gBAC9B,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;gBAC3C,CAAC,CAAC,IAAI,CAAC,SAAS,iBAAG,GAAG,EAAE,IAAI,IAAK,IAAI,EAAG;gBACxC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACjC,OAAO;YACL,GAAG;4CAEE,IAAI,KACP,IAAI,EACJ,OAAO,EAAE,MAAM,CAAC,WAAW,CACzB,MAAM,CAAC,OAAO,iBACZ,cAAc,EAAE,kBAAkB,IAC/B,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EAChB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACzB,EACD,MAAM;SAET,CAAC;IACJ,CAAC,EAAE,SAAS,CAAC,CAAC;AAChB,CAAC,CAAC;AAEJ,kBAAe,eAAe,CAAC","sourcesContent":["import { getNodeEnv } from \"./env\";\nimport handleFetch, { HandleFetchArgs } from \"./handleFetch\";\n\nconst handleBodyFetch =\n  (method: \"POST\" | \"PUT\") =>\n  <T extends Record<string, unknown> | ArrayBuffer = Record<string, never>>(\n    args: string | HandleFetchArgs,\n    _data?: Record<string, unknown>\n  ) => {\n    const { data, ...fetchArgs } =\n      typeof args === \"string\" ? { path: args, data: _data } : args;\n\n    return handleFetch<T>((url, init) => {\n      const body =\n        data instanceof Uint8Array\n          ? data\n          : getNodeEnv() === \"development\" &&\n            /(localhost|roamjs)/.test(url.toString())\n          ? JSON.stringify({ dev: true, ...data })\n          : JSON.stringify(data || {});\n      return [\n        url,\n        {\n          ...init,\n          body,\n          headers: Object.fromEntries(\n            Object.entries({\n              \"Content-Type\": \"application/json\",\n              ...init?.headers,\n            }).filter((h) => !!h[1])\n          ),\n          method,\n        },\n      ];\n    }, fetchArgs);\n  };\n\nexport default handleBodyFetch;\n"]}