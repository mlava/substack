{"version":3,"file":"renderOverlay.js","sourceRoot":"","sources":["../../src/util/renderOverlay.ts"],"names":[],"mappings":";;;AAAA,4DAA4B;AAC5B,0DAA0B;AAC1B,kEAAiC;AACjC,sFAAsD;AACtD,sFAAsD;AAStD,MAAM,YAAY,GAAG,wBAAwB,CAAC;AAE9C,MAAM,aAAa,GAAG,CAAoC,EACxD,EAAE,GAAG,IAAA,gBAAM,GAAE,EACb,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,eAAK,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,EACtD,KAAK,GAAG,EAAO,EACf,IAAI,GAAG,MAAM,MAMX,EAAE,EAA4B,EAAE;;IAClC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC7C,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACnC,MAAM,WAAW,GACf,OAAO,IAAI,KAAK,QAAQ;QACtB,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,IAAI,CAAC;IACX,IAAI,WAAW,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE;QAC9D,MAAM,MAAM,GACV,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,0CAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACtE,IAAI,CAAC,MAAM,EAAE;YACX,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACjC;aAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE;YACxC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACxE;aAAM,IAAI,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;YAC5C,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;SACrE;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,OAAO,GAAG,GAAG,EAAE;YACnB,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU;gBAAE,KAAK,CAAC,OAAO,EAAE,CAAC;YACzD,mBAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;YACxC,MAAM,CAAC,MAAM,EAAE,CAAC;YAChB,IAAA,4BAAkB,EAAC;gBACjB,UAAU,EAAE,CAAC,MAAM,CAAC;aACrB,CAAC,CAAC;QACL,CAAC,CAAC;QACF,mBAAQ,CAAC,MAAM,CACb,eAAK,CAAC,aAAa,CAAC,OAAO,kCACtB,KAAK,KACR,MAAM,EAAE,IAAI,EACZ,OAAO,IACP,EACF,MAAM,CACP,CAAC;QACF,IAAA,4BAAkB,EAAC;YACjB,UAAU,EAAE,CAAC,MAAM,CAAC;SACrB,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;KAChB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","sourcesContent":["import nanoid from \"nanoid\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport dispatchToRegistry from \"./dispatchToRegistry\";\nimport removeFromRegistry from \"./removeFromRegistry\";\n\nexport type RoamOverlayProps<\n  T extends Record<string, unknown> = Record<string, never>\n> = {\n  onClose: () => void;\n  isOpen: boolean;\n} & T;\n\nconst BEFORE_REGEX = /::before\\(([\\w.-]+)\\)$/;\n\nconst renderOverlay = <T extends Record<string, unknown>>({\n  id = nanoid(),\n  Overlay = (props) => React.createElement(\"div\", props),\n  props = {} as T,\n  path = \"body\",\n}: {\n  id?: string;\n  Overlay?: (props: RoamOverlayProps<T>) => React.ReactElement;\n  props?: T;\n  path?: string | HTMLElement | null;\n} = {}): (() => void) | undefined => {\n  const parent = document.createElement(\"div\");\n  parent.id = id.replace(/^\\d*/, \"\");\n  const pathElement =\n    typeof path === \"string\"\n      ? document.querySelector(path.replace(BEFORE_REGEX, \"\"))\n      : path;\n  if (pathElement && !pathElement.querySelector(`#${parent.id}`)) {\n    const before =\n      typeof path === \"string\" ? BEFORE_REGEX.exec(path)?.[1] : undefined;\n    if (!before) {\n      pathElement.appendChild(parent);\n    } else if (!Number.isNaN(Number(before))) {\n      pathElement.insertBefore(parent, pathElement.children[Number(before)]);\n    } else if (pathElement.querySelector(before)) {\n      pathElement.insertBefore(parent, pathElement.querySelector(before));\n    } else {\n      return undefined;\n    }\n    const onClose = () => {\n      if (typeof props.onClose === \"function\") props.onClose();\n      ReactDOM.unmountComponentAtNode(parent);\n      parent.remove();\n      removeFromRegistry({\n        reactRoots: [parent],\n      });\n    };\n    ReactDOM.render(\n      React.createElement(Overlay, {\n        ...props,\n        isOpen: true,\n        onClose,\n      }),\n      parent\n    );\n    dispatchToRegistry({\n      reactRoots: [parent],\n    });\n    return onClose;\n  }\n  return undefined;\n};\n\nexport default renderOverlay;\n"]}