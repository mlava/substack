{"version":3,"file":"setInputSetting.js","sourceRoot":"","sources":["../../src/util/setInputSetting.ts"],"names":[],"mappings":";;;AAAA,yGAAyE;AACzE,gFAAgD;AAChD,gFAAgD;AAChD,wEAAwC;AAExC,MAAM,eAAe,GAAG,CAAC,EACvB,QAAQ,EACR,KAAK,EACL,GAAG,EACH,KAAK,GAAG,CAAC,GAMV,EAAmB,EAAE;IACpB,MAAM,IAAI,GAAG,IAAA,iCAAuB,EAAC,QAAQ,CAAC,CAAC;IAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAA,qBAAW,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE;QACtC,OAAO,IAAA,qBAAW,EAAC;YACjB,GAAG,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG;YAC5B,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;KACJ;SAAM,IAAI,CAAC,OAAO,EAAE;QACnB,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnD,OAAO,IAAA,qBAAW,EAAC;YACjB,SAAS,EAAE,QAAQ;YACnB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;SACzB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CACX,IAAA,qBAAW,EAAC;YACV,SAAS,EAAE,GAAG;YACd,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;SACtB,CAAC,CACH,CAAC;KACH;SAAM;QACL,OAAO,IAAA,qBAAW,EAAC;YACjB,SAAS,EAAE,OAAO,CAAC,GAAG;YACtB,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;SACtB,CAAC,CAAC;KACJ;AACH,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["import getBasicTreeByParentUid from \"../queries/getBasicTreeByParentUid\";\nimport createBlock from \"../writes/createBlock\";\nimport updateBlock from \"../writes/updateBlock\";\nimport toFlexRegex from \"./toFlexRegex\";\n\nconst setInputSetting = ({\n  blockUid,\n  value,\n  key,\n  index = 0,\n}: {\n  blockUid: string;\n  value: string;\n  key: string;\n  index?: number;\n}): Promise<string> => {\n  const tree = getBasicTreeByParentUid(blockUid);\n  const keyNode = tree.find((t) => toFlexRegex(key).test(t.text));\n  if (keyNode && keyNode.children.length) {\n    return updateBlock({\n      uid: keyNode.children[0].uid,\n      text: value,\n    });\n  } else if (!keyNode) {\n    const uid = window.roamAlphaAPI.util.generateUID();\n    return createBlock({\n      parentUid: blockUid,\n      order: index,\n      node: { text: key, uid },\n    }).then(() =>\n      createBlock({\n        parentUid: uid,\n        order: 0,\n        node: { text: value },\n      })\n    );\n  } else {\n    return createBlock({\n      parentUid: keyNode.uid,\n      order: 0,\n      node: { text: value },\n    });\n  }\n};\n\nexport default setInputSetting;\n"]}