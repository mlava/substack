{"version":3,"file":"createButtonObserver.js","sourceRoot":"","sources":["../../src/dom/createButtonObserver.ts"],"names":[],"mappings":";;;AAAA,sFAAsD;AAEtD,MAAM,oBAAoB,GAAG,CAAC,EAC5B,SAAS,EACT,MAAM,EACN,QAAQ,GAAG,SAAS,GAKrB,EAAoB,EAAE,CACrB,IAAA,4BAAkB,EAAC;IACjB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;QACd,IACE,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE;YACvB,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;YAC5C,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,WAAW,EAAE,EACpD;YACA,MAAM,aAAa,GAAG,eAAe,SAAS,EAAE,CAAC;YACjD,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;gBAClC,CAAC,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;gBACtC,MAAM,CAAC,CAAsB,CAAC,CAAC;aAChC;SACF;IACH,CAAC;IACD,GAAG,EAAE,QAAQ;IACb,SAAS,EAAE,YAAY;IACvB,OAAO,EAAE,IAAI;CACd,CAAC,CAAC;AAEL,kBAAe,oBAAoB,CAAC","sourcesContent":["import createHTMLObserver from \"./createHTMLObserver\";\n\nconst createButtonObserver = ({\n  attribute,\n  render,\n  shortcut = attribute,\n}: {\n  shortcut?: string;\n  attribute: string;\n  render: (b: HTMLButtonElement) => void;\n}): MutationObserver =>\n  createHTMLObserver({\n    callback: (b) => {\n      if (\n        b.innerText.toUpperCase() ===\n          attribute.toUpperCase().replace(/-/g, \" \") ||\n        b.innerText.toUpperCase() === shortcut.toUpperCase()\n      ) {\n        const dataAttribute = `data-roamjs-${attribute}`;\n        if (!b.getAttribute(dataAttribute)) {\n          b.setAttribute(dataAttribute, \"true\");\n          render(b as HTMLButtonElement);\n        }\n      }\n    },\n    tag: \"BUTTON\",\n    className: \"bp3-button\",\n    useBody: true,\n  });\n\nexport default createButtonObserver;\n"]}