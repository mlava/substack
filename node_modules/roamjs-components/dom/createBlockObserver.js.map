{"version":3,"file":"createBlockObserver.js","sourceRoot":"","sources":["../../src/dom/createBlockObserver.ts"],"names":[],"mappings":";;;AAAA,sFAAsD;AAEtD,MAAM,mBAAmB,GAAG,CAC1B,qBAOK,EACL,gBAA+C,EAC3B,EAAE;IACtB,MAAM,aAAa,GAAG,IAAA,4BAAkB,EAAC;QACvC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;;YACd,OAAA,OAAO,qBAAqB,KAAK,UAAU;gBACzC,CAAC,CAAC,qBAAqB,CAAC,CAAmB,CAAC;gBAC5C,CAAC,CAAC,MAAA,qBAAqB,CAAC,WAAW,sEAAG,CAAmB,CAAC,CAAA;SAAA;QAC9D,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE;;YACpB,OAAA,OAAO,qBAAqB,KAAK,QAAQ;iBACzC,MAAA,qBAAqB,CAAC,aAAa,sEAAG,CAAmB,CAAC,CAAA,CAAA;SAAA;QAC5D,GAAG,EAAE,KAAK;QACV,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;IACH,IAAI,gBAAgB,EAAE;QACpB,OAAO;YACL,aAAa;YACb,IAAA,4BAAkB,EAAC;gBACjB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;;oBACd,OAAA,OAAO,qBAAqB,KAAK,QAAQ;wBACvC,CAAC,CAAC,MAAA,qBAAqB,CAAC,cAAc,sEAAG,CAAoB,CAAC;wBAC9D,CAAC,CAAC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,CAAoB,CAAC,CAAA;iBAAA;gBAC9C,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE;;oBACpB,OAAA,OAAO,qBAAqB,KAAK,QAAQ;yBACzC,MAAA,qBAAqB,CAAC,gBAAgB,sEAAG,CAAoB,CAAC,CAAA,CAAA;iBAAA;gBAChE,GAAG,EAAE,MAAM;gBACX,SAAS,EAAE,cAAc;aAC1B,CAAC;SACH,CAAC;KACH;IACD,OAAO,CAAC,aAAa,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,kBAAe,mBAAmB,CAAC","sourcesContent":["import createHTMLObserver from \"./createHTMLObserver\";\n\nconst createBlockObserver = (\n  blockCallbackOrConfig:\n    | ((b: HTMLDivElement) => void)\n    | {\n        onBlockLoad?: (b: HTMLDivElement) => void;\n        onBlockUnload?: (b: HTMLDivElement) => void;\n        onBlockRefLoad?: (b: HTMLSpanElement) => void;\n        onBlockRefUnload?: (b: HTMLSpanElement) => void;\n      },\n  blockRefCallback?: (b: HTMLSpanElement) => void\n): MutationObserver[] => {\n  const blockObserver = createHTMLObserver({\n    callback: (e) =>\n      typeof blockCallbackOrConfig === \"function\"\n        ? blockCallbackOrConfig(e as HTMLDivElement)\n        : blockCallbackOrConfig.onBlockLoad?.(e as HTMLDivElement),\n    removeCallback: (e) =>\n      typeof blockCallbackOrConfig === \"object\" &&\n      blockCallbackOrConfig.onBlockUnload?.(e as HTMLDivElement),\n    tag: \"DIV\",\n    className: \"roam-block\",\n  });\n  if (blockRefCallback) {\n    return [\n      blockObserver,\n      createHTMLObserver({\n        callback: (e) =>\n          typeof blockCallbackOrConfig === \"object\"\n            ? blockCallbackOrConfig.onBlockRefLoad?.(e as HTMLSpanElement)\n            : blockRefCallback?.(e as HTMLSpanElement),\n        removeCallback: (e) =>\n          typeof blockCallbackOrConfig === \"object\" &&\n          blockCallbackOrConfig.onBlockRefUnload?.(e as HTMLSpanElement),\n        tag: \"SPAN\",\n        className: \"rm-block-ref\",\n      }),\n    ];\n  }\n  return [blockObserver];\n};\n\nexport default createBlockObserver;\n"]}