{"version":3,"file":"elToTitle.js","sourceRoot":"","sources":["../../src/dom/elToTitle.ts"],"names":[],"mappings":";;AAAA,MAAM,SAAS,GAAG,CAAC,CAAQ,EAAU,EAAE;IACrC,IAAI,CAAC,CAAC,EAAE;QACN,OAAO,EAAE,CAAC;KACX;SAAM,IAAI,CAAC,CAAC,QAAQ,KAAK,OAAO,EAAE;QACjC,OAAO,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC;KAC1B;SAAM,IACL,CAAC,CAAC,QAAQ,KAAK,MAAM;QACpB,CAAqB,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAClE;QACA,OAAO,EAAE,CAAC;KACX;SAAM,IACL,CAAC,CAAC,QAAQ,KAAK,MAAM;QACpB,CAAqB,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,EACxD;QACA,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;KAClE;SAAM;QACL,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACzD;AACH,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC","sourcesContent":["const elToTitle = (e?: Node): string => {\n  if (!e) {\n    return \"\";\n  } else if (e.nodeName === \"#text\") {\n    return e.nodeValue || \"\";\n  } else if (\n    e.nodeName === \"SPAN\" &&\n    (e as HTMLSpanElement).classList.contains(\"rm-page-ref__brackets\")\n  ) {\n    return \"\";\n  } else if (\n    e.nodeName === \"SPAN\" &&\n    (e as HTMLSpanElement).classList.contains(\"rm-page-ref\")\n  ) {\n    return `[[${Array.from(e.childNodes).map(elToTitle).join(\"\")}]]`;\n  } else {\n    return Array.from(e.childNodes).map(elToTitle).join(\"\");\n  }\n};\n\nexport default elToTitle;\n"]}