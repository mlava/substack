{"version":3,"file":"addBlockCommand.js","sourceRoot":"","sources":["../../src/dom/addBlockCommand.ts"],"names":[],"mappings":";;;AAAA,+GAA+E;AAC/E,+FAA+D;AAC/D,uGAAuE;AACvE,6FAA6D;AAC7D,gFAAgD;AAChD,gFAAgD;AAChD,sFAAsD;AACtD,oFAAoD;AACpD,gEAAgC;AAEhC,MAAM,eAAe,GAAG,CAAC,EACvB,KAAK,EACL,QAAQ,GAIT,EAAQ,EAAE;IACT,MAAM,WAAW,GAA4C;QAC3D,OAAO,EAAE,IAAI;KACd,CAAC;IACF,MAAM,YAAY,GAAG,CAAC,OAAe,EAAE,EAAE;QACvC,IAAI,WAAW,CAAC,OAAO,EAAE;YACvB,MAAM,GAAG,GAAG,IAAA,iBAAO,EAAC,WAAW,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC;YAClD,MAAM,SAAS,GAAG,IAAA,gCAAsB,EAAC,GAAG,CAAC,CAAC;YAC9C,MAAM,IAAI,GAAG,IAAA,2BAAiB,EAAC,GAAG,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,OAAO,IAAA,qBAAW,EAAC;oBACjB,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;oBAC5B,SAAS;oBACT,KAAK,EAAE,IAAA,4BAAkB,EAAC,GAAG,CAAC,GAAG,CAAC;iBACnC,CAAC,CAAC;aACJ;YACD,OAAO,IAAA,qBAAW,EAAC;gBACjB,GAAG;gBACH,IAAI,EAAE,YAAY;aACnB,CAAC,CAAC;SACJ;QACD,OAAO,IAAA,qBAAW,EAAC;YACjB,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;YAC5B,SAAS,EAAE,OAAO;YAClB,KAAK,EAAE,IAAA,oCAA0B,EAAC,OAAO,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC,CAAC;IACF,IAAA,4BAAkB,EAAC;QACjB,GAAG,EAAE,UAAU;QACf,SAAS,EAAE,gBAAgB;QAC3B,QAAQ,EAAE,CAAC,CAAc,EAAE,EAAE,CAC3B,CAAC,WAAW,CAAC,OAAO,GAAG,CAAwB,CAAC;KACnD,CAAC,CAAC;IACH,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC;QAC/C,KAAK;QACL,QAAQ,EAAE,GAAG,EAAE;YACb,MAAM,SAAS,GAAG,IAAA,2BAAiB,GAAE,CAAC;YACtC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe,eAAe,CAAC","sourcesContent":["import getChildrenLengthByPageUid from \"../queries/getChildrenLengthByPageUid\";\nimport getOrderByBlockUid from \"../queries/getOrderByBlockUid\";\nimport getParentUidByBlockUid from \"../queries/getParentUidByBlockUid\";\nimport getTextByBlockUid from \"../queries/getTextByBlockUid\";\nimport createBlock from \"../writes/createBlock\";\nimport updateBlock from \"../writes/updateBlock\";\nimport createHTMLObserver from \"./createHTMLObserver\";\nimport getCurrentPageUid from \"./getCurrentPageUid\";\nimport getUids from \"./getUids\";\n\nconst addBlockCommand = ({\n  label,\n  callback,\n}: {\n  label: string;\n  callback: (uid: string) => void;\n}): void => {\n  const textareaRef: { current: HTMLTextAreaElement | null } = {\n    current: null,\n  };\n  const loadBlockUid = (pageUid: string) => {\n    if (textareaRef.current) {\n      const uid = getUids(textareaRef.current).blockUid;\n      const parentUid = getParentUidByBlockUid(uid);\n      const text = getTextByBlockUid(uid);\n      if (text.length) {\n        return createBlock({\n          node: { text: \"Loading...\" },\n          parentUid,\n          order: getOrderByBlockUid(uid) + 1,\n        });\n      }\n      return updateBlock({\n        uid,\n        text: \"Loading...\",\n      });\n    }\n    return createBlock({\n      node: { text: \"Loading...\" },\n      parentUid: pageUid,\n      order: getChildrenLengthByPageUid(pageUid),\n    });\n  };\n  createHTMLObserver({\n    tag: \"TEXTAREA\",\n    className: \"rm-block-input\",\n    callback: (t: HTMLElement) =>\n      (textareaRef.current = t as HTMLTextAreaElement),\n  });\n  window.roamAlphaAPI.ui.commandPalette.addCommand({\n    label,\n    callback: () => {\n      const parentUid = getCurrentPageUid();\n      loadBlockUid(parentUid).then(callback);\n    },\n  });\n};\n\nexport default addBlockCommand;\n"]}