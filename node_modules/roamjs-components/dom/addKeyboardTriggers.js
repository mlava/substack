"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const getSettingValueFromTree_1 = tslib_1.__importDefault(require("../util/getSettingValueFromTree"));
const addKeybordTriggers = ({ triggers: inputTriggers, }) => {
    const triggers = inputTriggers.map(({ trigger, callback }) => {
        if (trigger instanceof RegExp) {
            return { trigger, callback };
        }
        else if (typeof trigger === "function") {
            return { callback, trigger: trigger() };
        }
        else {
            const triggerValue = (0, getSettingValueFromTree_1.default)({
                tree: trigger.tree,
                key: "trigger",
                defaultValue: trigger.defaultValue || "\\\\",
            })
                .replace(/"/g, "")
                .replace(/\\/g, "\\\\")
                .replace(/\+/g, "\\+")
                .trim();
            const triggerRegex = new RegExp(`${triggerValue}$`);
            return { callback, trigger: triggerRegex };
        }
    });
    document.addEventListener("input", (e) => {
        var _a, _b;
        const target = e.target;
        if (target.tagName === "TEXTAREA" &&
            target.classList.contains("rm-block-input")) {
            const textarea = target;
            const valueToCursor = textarea.value.substring(0, textarea.selectionStart);
            (_b = (_a = triggers.find((args) => args.trigger.test(valueToCursor))) === null || _a === void 0 ? void 0 : _a.callback) === null || _b === void 0 ? void 0 : _b.call(_a);
        }
    });
};
exports.default = addKeybordTriggers;
//# sourceMappingURL=addKeyboardTriggers.js.map