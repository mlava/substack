{"version":3,"file":"parseRoamBlocksToHtml.js","sourceRoot":"","sources":["../../src/dom/parseRoamBlocksToHtml.ts"],"names":[],"mappings":"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","sourcesContent":["import { getParseInline, RoamContext } from \"../marked\";\nimport type { TreeNode, ViewType } from \"../types\";\n\nconst VIEW_CONTAINER = {\n  bullet: \"ul\",\n  document: \"div\",\n  numbered: \"ol\",\n};\nconst HEADINGS = [\"p\", \"h1\", \"h2\", \"h3\"];\n\nexport const syncParseRoamBlocksToHtml = ({\n  content,\n  viewType,\n  level,\n  context,\n  parseInline,\n}: {\n  level: number;\n  context: Required<RoamContext>;\n  content: TreeNode[];\n  viewType: ViewType;\n  parseInline: Awaited<ReturnType<typeof getParseInline>>;\n}): string => {\n  if (content.length === 0) {\n    return \"\";\n  }\n  const items = content.map((t) => {\n    let skipChildren = false;\n    const componentsWithChildren = (s: string, ac?: string): string | false => {\n      const parent = context.components(s, ac);\n      if (parent) {\n        return parent;\n      } else if (/table/i.test(s)) {\n        skipChildren = true;\n        const flatten = (n: TreeNode): TreeNode[][] =>\n          n.children.length\n            ? n.children\n                .map((c) => flatten(c))\n                .flatMap((c) => c.map((cc) => [n, ...cc]))\n            : [[n]];\n        const rows = flatten(t).map((row) =>\n          row.slice(1).map(\n            (td) =>\n              `<td>${parseInline(td.text, {\n                ...context,\n                components: componentsWithChildren,\n              })}</td`\n          )\n        );\n        const columns = Math.max(...rows.map((row) => row.length), 0);\n        const fill = Array<string>(columns).fill(\"<td></td>\");\n        const normalizedRows = rows.map((row) =>\n          [...row, ...fill.slice(0, columns - row.length)].join(\"\")\n        );\n        return `<table class=\"roam-table\"><tbody>${normalizedRows\n          .map((row) => `<tr>${row}</tr>`)\n          .join(\"\")}</tbody></table>`;\n      } else if (/roam\\/render/i.test(s)) {\n        skipChildren = true;\n        const acCode = ac || \"\";\n        return `<div class=\"roam-render\">${acCode}</div>`;\n      }\n      return false;\n    };\n    const classlist =\n      t.textAlign === \"left\"\n        ? [\"text-align-left\"]\n        : t.textAlign === \"center\"\n        ? [\"text-align-center\"]\n        : t.textAlign === \"right\"\n        ? [\"text-align-right\"]\n        : [];\n    const textToParse = t.text.replace(/#\\.([^\\s]*)/g, (_, className) => {\n      classlist.push(className);\n      return \"\";\n    });\n    const inlineMarked = parseInline(textToParse, {\n      ...context,\n      components: componentsWithChildren,\n    });\n    const innerHtml = `<${HEADINGS[t.heading]}>${inlineMarked}</${\n      HEADINGS[t.heading]\n    }>\\n${\n      skipChildren\n        ? \"\"\n        : syncParseRoamBlocksToHtml({\n            content: t.children,\n            viewType: t.viewType,\n            level: level + 1,\n            context,\n            parseInline,\n          })\n    }`;\n    if (level > 0 && viewType === \"document\") {\n      classlist.push(\"document-bullet\");\n    }\n    const attrs = `id=\"${t.uid}\"${\n      classlist.length ? ` class=\"${classlist.join(\" \")}\"` : \"\"\n    }`;\n    const blockHtml =\n      level === 0 && viewType === \"document\"\n        ? `<div ${attrs}>${innerHtml}</div>`\n        : `<li ${attrs}>${innerHtml}</li>`;\n    return blockHtml;\n  });\n  const containerTag =\n    level > 0 && viewType === \"document\" ? \"ul\" : VIEW_CONTAINER[viewType];\n  return `<${containerTag}>${items.join(\"\\n\")}</${containerTag}>`;\n};\n\nconst parseRoamBlocksToHtml = (\n  args: Omit<Parameters<typeof syncParseRoamBlocksToHtml>[0], \"parseInline\">\n) =>\n  getParseInline().then((parseInline) =>\n    syncParseRoamBlocksToHtml({ ...args, parseInline })\n  );\n\nexport default parseRoamBlocksToHtml;\n"]}