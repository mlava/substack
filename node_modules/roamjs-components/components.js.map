{"version":3,"file":"components.js","sourceRoot":"","sources":["../src/components.tsx"],"names":[],"mappings":"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","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { useState, useMemo } from \"react\";\nimport { Button, Checkbox, NumericInput, Label } from \"@blueprintjs/core\";\n\nimport AutocompleteInput from \"./components/AutocompleteInput\";\nimport FormDialog from \"./components/FormDialog\";\nimport PageInput from \"./components/PageInput\";\nimport renderToast from \"./components/Toast\";\n\nimport renderOverlay from \"./util/renderOverlay\";\nimport runExtension from \"./util/runExtension\";\n\nimport { createBlock } from \"./writes\";\nimport MenuItemSelect from \"./components/MenuItemSelect\";\n\n// const blockRender = (Component: React.FC) => {\n//   const block = window.roamAlphaAPI.ui.getFocusedBlock();\n//   const parent = document.getElementById(\n//     `block-input-${block?.[\"window-id\"]}-${block?.[\"block-uid\"]}`\n//   );\n//   ReactDOM.render(<Component />, parent);\n// };\n\nconst unloads = new Set<() => void>();\n\nconst rootRender = (Component: React.FC) => {\n  const root = document.querySelector(\".roam-article\");\n  const parent = document.createElement(\"div\");\n  root?.insertBefore(parent, root.firstElementChild);\n  ReactDOM.render(<Component />, parent);\n  unloads.add(() => {\n    ReactDOM.unmountComponentAtNode(parent);\n    parent.remove();\n  });\n};\n\nconst components = [\n  {\n    callback: () =>\n      rootRender(() => {\n        const [value, setValue] = useState(\"\");\n        const [filterable, setFilterable] = useState(false);\n        const options = useMemo(() => [\"apple\", \"banana\", \"orange\"], []);\n        return (\n          <>\n            <div>Chosen value: {value}</div>\n            <Checkbox\n              checked={filterable as boolean}\n              onChange={(e) =>\n                setFilterable((e.target as HTMLInputElement).checked)\n              }\n              label={\"Filterable\"}\n            />\n            <MenuItemSelect\n              activeItem={value}\n              items={options}\n              onItemSelect={(item) => setValue(item)}\n              filterable={filterable}\n            />\n          </>\n        );\n      }),\n    label: \"MenuItemSelect\",\n  },\n  {\n    callback: () =>\n      rootRender(() => {\n        const [value, setValue] = useState(\"\");\n        const [numResults, setNumResults] = useState(100);\n        const [disabled, setDisabled] = useState(false);\n        const [maxItemsDisplayed, setMaxItemsDisplayed] = useState(0);\n        const options = useMemo(() => {\n          const items = [];\n          for (let i = 0; i < numResults; i++) {\n            items.push(Math.random().toString(36).substring(7));\n          }\n          return items;\n        }, [numResults]);\n        return (\n          <>\n            <Label>\n              Number of Results\n              <NumericInput\n                value={numResults}\n                onValueChange={(e) => setNumResults(e)}\n                buttonPosition={\"none\"}\n              />\n            </Label>\n            <Label>\n              Max Items Displayed (0 for all)\n              <NumericInput\n                value={maxItemsDisplayed}\n                onValueChange={(e) => setMaxItemsDisplayed(e)}\n                buttonPosition={\"none\"}\n              />\n            </Label>\n            <Label>Chosen value: {value}</Label>\n            <Checkbox\n              checked={disabled}\n              onChange={(e) =>\n                setDisabled((e.target as HTMLInputElement).checked)\n              }\n              label={\"Disabled\"}\n            />\n            <Label>\n              Autocomplete\n              <AutocompleteInput\n                disabled={disabled}\n                value={value}\n                setValue={setValue}\n                options={options}\n                maxItemsDisplayed={\n                  maxItemsDisplayed === 0 ? undefined : maxItemsDisplayed\n                }\n              />\n            </Label>\n          </>\n        );\n      }),\n    label: \"AutocompleteInput\",\n  },\n  {\n    callback: () =>\n      rootRender(() => {\n        const [isOpen, setIsOpen] = useState(false);\n        return (\n          <>\n            <Button onClick={() => setIsOpen(true)} text={\"Open Form\"} />\n            <FormDialog\n              isOpen={isOpen}\n              onClose={() => setIsOpen(false)}\n              onSubmit={(data) =>\n                window.roamAlphaAPI.ui.mainWindow\n                  .getOpenPageOrBlockUid()\n                  .then((parentUid) =>\n                    createBlock({\n                      parentUid:\n                        parentUid ||\n                        window.roamAlphaAPI.util.dateToPageUid(new Date()),\n                      node: {\n                        text: \"Response\",\n                        children: Object.entries(data).map(([k, v]) => ({\n                          text: k,\n                          children: Array.isArray(v) ? v : [{ text: `${v}` }],\n                        })),\n                      },\n                    })\n                  )\n              }\n              fields={{\n                text: { type: \"text\", label: \"Text Field\" },\n                number: { type: \"number\", label: \"Number Field\" },\n                info: { type: \"info\", label: \"Read Only Info Text\" },\n                flag: { type: \"flag\", label: \"Flag Field\" },\n                conditionalText: {\n                  type: \"text\",\n                  label: \"Conditional Text Field\",\n                  conditional: \"flag\",\n                },\n                page: { type: \"page\", label: \"Page Field\" },\n                block: { type: \"block\", label: \"Block Field\" },\n                select: {\n                  type: \"select\",\n                  label: \"Select Field\",\n                  options: [\n                    \"apple\",\n                    \"banana\",\n                    \"orange\",\n                    \"conditional select 1\",\n                  ],\n                },\n                conditionalSelect: {\n                  type: \"text\",\n                  label: \"Conditional Text Field\",\n                  conditional: \"select\",\n                  conditionalValues: [\"conditional select 1\"],\n                },\n                autocomplete: {\n                  type: \"autocomplete\",\n                  label: \"Autocomplete Field\",\n                  options: [\"apple\", \"banana\", \"orange\"],\n                },\n                embed: {\n                  type: \"embed\",\n                  label: \"Embed Field\",\n                },\n              }}\n            />\n          </>\n        );\n      }),\n    label: \"FormDialog\",\n  },\n  {\n    callback: () =>\n      rootRender(() => {\n        const [value, setValue] = useState(\"\");\n        const [multiline, setMultiline] = useState(false);\n        return (\n          <>\n            <PageInput\n              value={value}\n              setValue={setValue}\n              multiline={multiline}\n            />\n            <input\n              className=\"ml-8 inline-block\"\n              checked={multiline}\n              onChange={(e) => setMultiline(e.target.checked)}\n              type={\"checkbox\"}\n            />\n          </>\n        );\n      }),\n    label: \"PageInput\",\n  },\n];\n\nexport default runExtension(async (args) => {\n  components.forEach(({ callback, label }) => {\n    args.extensionAPI.ui.commandPalette.addCommand({\n      label: `Render RoamJS component ${label}`,\n      callback,\n    });\n  });\n  window.roamjs.extension.developer = {\n    components: {\n      AutocompleteInput,\n      FormDialog,\n      PageInput,\n      renderToast,\n    },\n    util: {\n      renderOverlay,\n      runExtension,\n    },\n    args,\n  };\n  return () => {\n    unloads.forEach((unload) => unload());\n  };\n});\n"]}