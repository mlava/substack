"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_1 = tslib_1.__importDefault(require("fs"));
const path_1 = tslib_1.__importDefault(require("path"));
const axios_1 = tslib_1.__importDefault(require("axios"));
const dotenv_1 = tslib_1.__importDefault(require("dotenv"));
const child_process_1 = require("child_process");
dotenv_1.default.config();
const opts = () => ({
    headers: {
        Accept: "application/vnd.github+json",
        Authorization: `token ${process.env.GITHUB_TOKEN}`,
    },
});
const publishToRoamDepot = ({ owner = process.env.GITHUB_REPOSITORY_OWNER, repo = path_1.default.basename(process.cwd()), branch = repo, proxy = process.env.ROAMJS_PROXY || owner, } = {}) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    console.log("Attempting to publish to Roam Depot...");
    const pr = yield axios_1.default
        .get(`https://api.github.com/repos/Roam-Research/roam-depot/pulls?head=${owner}:${branch}`, opts())
        .then((r) => { var _a; return (_a = r.data[0]) === null || _a === void 0 ? void 0 : _a.html_url; });
    const cwd = process.cwd();
    process.chdir("/tmp");
    (0, child_process_1.execSync)(`git clone https://${owner}:${process.env.GITHUB_TOKEN}@github.com/${owner}/roam-depot.git`, { stdio: "inherit" });
    process.chdir("roam-depot");
    const manifestFile = `extensions/${proxy}/${repo.replace(/^roam(js)?-/, "")}.json`;
    const packageJson = JSON.parse(fs_1.default.readFileSync(`${cwd}/package.json`).toString());
    const { name: authorName, email: authorEmail } = yield axios_1.default
        .get(`https://api.github.com/user`, opts())
        .then((r) => r.data)
        .catch(() => packageJson.author || {});
    (0, child_process_1.execSync)(`git config --global user.email "${authorEmail}"`, {
        stdio: "inherit",
    });
    (0, child_process_1.execSync)(`git config --global user.name "${authorName}"`, {
        stdio: "inherit",
    });
    (0, child_process_1.execSync)(`git remote add roam https://github.com/Roam-Research/roam-depot`, {
        stdio: "inherit",
    });
    (0, child_process_1.execSync)(`git pull roam main --rebase`, { stdio: "inherit" });
    (0, child_process_1.execSync)(`git push origin main -f`, { stdio: "inherit" });
    if (pr) {
        console.log("Found existing PR");
        (0, child_process_1.execSync)(`git checkout ${branch}`, { stdio: "inherit" });
        (0, child_process_1.execSync)(`git rebase origin/main`, { stdio: "inherit" });
        const manifest = fs_1.default.readFileSync(manifestFile).toString();
        fs_1.default.writeFileSync(manifestFile, manifest.replace(/"source_commit": "[a-f0-9]+",/, `"source_commit": "${process.env.GITHUB_SHA}",`));
        console.log("Editing", manifestFile, "from", manifest, "to", process.env.GITHUB_SHA);
        (0, child_process_1.execSync)("git add --all", { stdio: "inherit" });
        (0, child_process_1.execSync)(`git commit -m "Version ${packageJson.version}"`, {
            stdio: "inherit",
        });
        (0, child_process_1.execSync)(`git push origin ${branch} -f`, { stdio: "inherit" });
        console.log(`Updated pull request: ${pr}`);
    }
    else {
        console.log("Creating new PR");
        (0, child_process_1.execSync)(`git checkout -b ${branch}`, { stdio: "inherit" });
        if (!fs_1.default.existsSync(`extensions/${proxy}`))
            fs_1.default.mkdirSync(`extensions/${proxy}`);
        const name = repo
            .replace(/^roam(js)?-/, "")
            .split("-")
            .map((s) => `${s.slice(0, 1).toUpperCase()}${s.slice(1)}`)
            .join(" ");
        if (fs_1.default.existsSync(manifestFile)) {
            const manifest = fs_1.default.readFileSync(manifestFile).toString();
            fs_1.default.writeFileSync(manifestFile, manifest.replace(/"source_commit": "[a-f0-9]+",/, `"source_commit": "${process.env.GITHUB_SHA}",`));
        }
        else {
            fs_1.default.writeFileSync(manifestFile, JSON.stringify({
                name,
                short_description: (packageJson === null || packageJson === void 0 ? void 0 : packageJson.description) ||
                    "Description missing from package json",
                author: authorName,
                tags: (packageJson === null || packageJson === void 0 ? void 0 : packageJson.tags) || [],
                source_url: `https://github.com/${owner}/${repo}`,
                source_repo: `https://github.com/${owner}/${repo}.git`,
                source_commit: process.env.GITHUB_SHA,
                stripe_account: packageJson.stripe,
            }, null, 4) + "\n");
        }
        const title = `${name}: Version ${packageJson.version}`;
        (0, child_process_1.execSync)("git add --all", { stdio: "inherit" });
        (0, child_process_1.execSync)(`git commit -m "${title}"`, { stdio: "inherit" });
        (0, child_process_1.execSync)(`git push origin ${branch} -f`, { stdio: "inherit" });
        const url = yield axios_1.default
            .post(`https://api.github.com/repos/Roam-Research/roam-depot/pulls`, {
            head: `${owner}:${branch}`,
            base: "main",
            title,
        }, opts())
            .then((r) => r.data.html_url)
            .catch((e) => Promise.reject(e.response.data || e.message));
        console.log(`Created pull request: ${url}`);
    }
    process.chdir(cwd);
});
exports.default = publishToRoamDepot;
//# sourceMappingURL=publishToRoamDepot.js.map