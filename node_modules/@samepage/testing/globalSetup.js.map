{"version":3,"file":"globalSetup.js","sourceRoot":"","sources":["../../package/testing/globalSetup.ts"],"names":[],"mappings":";;;AAAA,oDAAoB;AAEpB,MAAM,WAAW,GAAG,KAAK,IAAI,EAAE;;IAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC;IACtD,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO;QAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IAC/D,IAAI,YAAE,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,kBAAkB,CAAC,EAAE;QACrD,MAAM,MAAO,GAAG,OAAO,CAAC,GAAG,EAAE,eAAe,mEACzC,IAAI;QACH,YAAY;QACZ,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK,UAAU,IAAI,GAAG,CAAC,KAAK,EAAE,CACxD;aACA,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACnC;AACH,CAAC,CAAC;AAEF,kBAAe,WAAW,CAAC","sourcesContent":["import fs from \"fs\";\n\nconst globalSetup = async () => {\n  process.env.NODE_ENV = process.env.NODE_ENV || \"test\";\n  if (process.env.DEBUG || process.env.PWDEBUG)\n    process.env.DEBUG = process.env.DEBUG || process.env.PWDEBUG;\n  if (fs.existsSync(`${process.cwd()}/tests/config.ts`)) {\n    await import(`${process.cwd()}/tests/config`)\n      .then(\n        //@ts-ignore\n        (mod) => typeof mod.setup === \"function\" && mod.setup()\n      )\n      .catch((e) => console.error(e));\n  }\n};\n\nexport default globalSetup;\n"]}