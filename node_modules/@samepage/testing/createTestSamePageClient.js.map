{"version":3,"file":"createTestSamePageClient.js","sourceRoot":"","sources":["../../package/testing/createTestSamePageClient.ts"],"names":[],"mappings":"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","sourcesContent":["import { onAppEvent } from \"../internal/registerAppEventListener\";\nimport setupSamePageClient from \"../protocols/setupSamePageClient\";\nimport setupSharePageWithNotebook from \"../protocols/sharePageWithNotebook\";\nimport setupNotebookQuerying from \"../protocols/notebookQuerying\";\nimport {\n  zInitialSchema,\n  InitialSchema,\n  Notification,\n  Schema,\n  LogEvent,\n  zJsonData,\n} from \"../internal/types\";\nimport { z } from \"zod\";\nimport WebSocket from \"ws\";\nimport fetch from \"node-fetch\";\nimport inviteNotebookToPage from \"../utils/inviteNotebookToPage\";\nimport toAtJson from \"./toAtJson\";\nimport { JSDOM } from \"jsdom\";\nimport apiClient from \"../internal/apiClient\";\nimport Automerge from \"automerge\";\nimport base64ToBinary from \"../internal/base64ToBinary\";\nimport { callNotificationAction } from \"../internal/notificationActions\";\nimport fromAtJson from \"./fromAtJson\";\nimport { load, set } from \"../utils/localAutomergeDb\";\nimport binaryToBase64 from \"../internal/binaryToBase64\";\nimport { v4 } from \"uuid\";\nimport changeAutomergeDoc from \"../utils/changeAutomergeDoc\";\nimport unwrapSchema from \"../utils/unwrapSchema\";\nimport debug from \"../utils/debugger\";\n\nconst SUPPORTED_TAGS = [\"SPAN\", \"DIV\", \"A\", \"LI\"] as const;\nconst TAG_SET = new Set<string>(SUPPORTED_TAGS);\nconst processMessageSchema = z.discriminatedUnion(\"type\", [\n  z.object({\n    type: z.literal(\"accept\"),\n    notebookPageId: z.string(),\n    notificationUuid: z.string(),\n    data: zJsonData,\n  }),\n  z.object({\n    type: z.literal(\"accept-request\"),\n    data: zJsonData,\n    notificationUuid: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"setCurrentNotebookPageId\"),\n    notebookPageId: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"setAppClientState\"),\n    notebookPageId: z.string(),\n    data: z.string(),\n  }),\n  z.object({ type: z.literal(\"share\") }),\n  z.object({\n    type: z.literal(\"invite\"),\n    notebookUuid: z.string(),\n  }),\n  z.object({ type: z.literal(\"unload\") }),\n  z.object({ type: z.literal(\"read\"), notebookPageId: z.string() }),\n  z.object({\n    type: z.literal(\"insert\"),\n    notebookPageId: z.string(),\n    content: z.string(),\n    index: z.number().or(z.string()),\n    path: z.string(),\n    delay: z.literal(true).optional(),\n  }),\n  z.object({\n    type: z.literal(\"delete\"),\n    notebookPageId: z.string(),\n    count: z.number(),\n    index: z.number(),\n    path: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"disconnect\"),\n  }),\n  z.object({\n    type: z.literal(\"connect\"),\n  }),\n  z.object({\n    type: z.literal(\"break\"),\n  }),\n  z.object({\n    type: z.literal(\"fix\"),\n  }),\n  z.object({\n    type: z.literal(\"breakCalculate\"),\n  }),\n  z.object({\n    type: z.literal(\"fixCalculate\"),\n  }),\n  z.object({\n    type: z.literal(\"awaitLog\"),\n    id: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"query\"),\n    request: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"getSharedPage\"),\n    notebookPageId: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"refresh\"),\n    notebookPageId: z.string(),\n    data: zInitialSchema,\n  }),\n  z.object({\n    type: z.literal(\"waitForNotification\"),\n  }),\n  z.object({\n    type: z.literal(\"resume\"),\n    notebookPageId: z.string(),\n    update: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"route\"),\n    routes: z\n      .object({\n        key: z.string(),\n        value: z.string(),\n        response: zJsonData,\n      })\n      .array(),\n  }),\n  z.object({\n    type: z.literal(\"request\"),\n    request: z.any(),\n    target: z.string(),\n  }),\n]);\nexport const responseMessageSchema = z.discriminatedUnion(\"type\", [\n  z.object({\n    type: z.literal(\"error\"),\n    data: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"ready\"),\n    uuid: z.string(),\n  }),\n  z.object({\n    type: z.literal(\"response\"),\n    uuid: z.string(),\n    data: z.record(z.unknown()).optional(),\n  }),\n]);\n\nexport type MessageSchema = z.infer<typeof processMessageSchema>;\nexport type ResponseSchema = z.infer<typeof responseMessageSchema>;\n\nconst forkedIndex = process.argv.indexOf(\"--forked\");\nconst isForked = forkedIndex >= 0 && typeof process.send !== \"undefined\";\n\nconst createTestSamePageClient = async ({\n  workspace,\n  initOptions,\n  onMessage,\n}: {\n  initOptions: { email: string; password: string; create?: boolean };\n  workspace: string;\n  onMessage: (args: ResponseSchema) => void;\n}) => {\n  // @ts-ignore\n  global.WebSocket = WebSocket;\n  // @ts-ignore\n  global.fetch = fetch;\n  const log = debug(`test-client-${workspace}`);\n\n  const awaitLog = (id: string, target = 1) =>\n    new Promise<{ content: string; intent: LogEvent[\"intent\"] }>((resolve) => {\n      let count = 0;\n      const offAppEvent = onAppEvent(\"log\", (e) => {\n        log(`while waiting for ${id} logged ${e.id}: ${JSON.stringify(e)}`);\n        if (e.id === id) {\n          count++;\n          if (count === target) {\n            offAppEvent();\n            resolve({ content: e.content, intent: e.intent });\n          }\n        }\n      });\n    });\n\n  let currentNotebookPageId = \"\";\n  const appClientState: Record<string, JSDOM> = {};\n  const commands: Record<string, () => unknown> = {};\n\n  const defaultApplyState = async (id: string, data: InitialSchema) => {\n    appClientState[id] = new JSDOM(fromAtJson(data));\n  };\n  let applyState = defaultApplyState;\n\n  const defaultCalculateState = async (id: string): Promise<InitialSchema> => {\n    const dom = appClientState[id];\n    if (dom) {\n      const atJson = toAtJson(dom.window.document.body);\n      return atJson;\n    } else {\n      return { content: \"\", annotations: [] };\n    }\n  };\n  let calculateState = defaultCalculateState;\n\n  const settings = {\n    uuid: \"\",\n    token: \"\",\n  };\n  const initializingPromise = new Promise<void>((resolve) => {\n    const offAppEvent = onAppEvent(\"prompt-account-info\", (e) => {\n      offAppEvent();\n      e.respond(initOptions).then(resolve);\n    });\n  });\n  log(\"setting up client\");\n  const { unload, addNotebookRequestListener, sendNotebookRequest } =\n    setupSamePageClient({\n      getSetting: (s) => settings[s],\n      setSetting: (s, v) => (settings[s] = v),\n      addCommand: ({ label, callback }) => (commands[label] = callback),\n      removeCommand: ({ label }) => delete commands[label],\n      workspace,\n      app: \"samepage\",\n    });\n  log(\"setting up page sync protocol\");\n  const {\n    unload: unloadSharePage,\n    refreshContent,\n    isShared,\n  } = setupSharePageWithNotebook({\n    getCurrentNotebookPageId: async () => currentNotebookPageId,\n    ensurePageByTitle: async (title) => {\n      if (appClientState[title.content]) {\n        return { notebookPageId: title.content, preExisting: true };\n      }\n      appClientState[title.content] = new JSDOM();\n      return title.content;\n    },\n    deletePage: async (notebookPageId) => delete appClientState[notebookPageId],\n    encodeState: async (notebookPageId) => ({\n      $body: await calculateState(notebookPageId),\n    }),\n    decodeState: async (id, data) => applyState(id, data.$body),\n  });\n  log(\"setting up page deprecated query protocol\");\n  const { unload: unloadNotebookQuerying, query } = setupNotebookQuerying({\n    onQuery: async (notebookPageId) => {\n      const dom = appClientState[notebookPageId];\n      return dom\n        ? { ...toAtJson(dom.window.document.body) }\n        : { content: \"\", annotations: [] };\n    },\n    onQueryResponse: async (response) => {\n      if (response.data.content) {\n        const [notebookUuid, notebookPageId] = response.request.split(\":\");\n        appClientState[`${notebookUuid}:${notebookPageId}`] = new JSDOM(\n          fromAtJson(response.data)\n        );\n      }\n    },\n  });\n\n  log(\"Check if account is finished initializing\");\n  await initializingPromise.catch(() =>\n    onMessage({\n      type: \"error\",\n      data: `Error: 3 arguments required for --forked (workspace, email, password)\\nFound: ${process.argv}`,\n    })\n  );\n  log(\"Wait for success message\");\n  await awaitLog(\"samepage-success\");\n  onMessage({ type: \"ready\", uuid: settings.uuid });\n  const updatesToSend: Record<string, any> = {};\n  log(\"Ready for messages\");\n  return {\n    send: async (m: unknown) => {\n      try {\n        const message = processMessageSchema\n          .and(z.object({ uuid: z.string().uuid() }))\n          .parse(m);\n        const sendResponse = (data?: Record<string, unknown>) =>\n          onMessage({ type: \"response\", uuid: message.uuid, data });\n        if (message.type === \"setCurrentNotebookPageId\") {\n          currentNotebookPageId = message.notebookPageId;\n          sendResponse();\n        } else if (message.type === \"setAppClientState\") {\n          appClientState[message.notebookPageId] = new JSDOM(message.data);\n          const shared = await isShared(message.notebookPageId);\n          if (shared) {\n            await refreshContent({\n              notebookPageId: message.notebookPageId,\n            }).then(() => sendResponse({ success: true }));\n          } else {\n            sendResponse({ success: false });\n          }\n        } else if (message.type === \"share\") {\n          commands[\"Share Page on SamePage\"]();\n          await awaitLog(\"init-page-success\").then(() => sendResponse());\n        } else if (message.type === \"accept\") {\n          callNotificationAction({\n            operation: \"SHARE_PAGE\",\n            label: \"accept\",\n            data: {\n              ...message.data,\n              $title: { content: message.notebookPageId, annotations: [] },\n            },\n            messageUuid: message.notificationUuid,\n          }).then(() => sendResponse({ success: true }));\n        } else if (message.type === \"accept-request\") {\n          callNotificationAction({\n            operation: \"REQUEST_DATA\",\n            label: \"accept\",\n            data: message.data,\n            messageUuid: message.notificationUuid,\n          }).then(() => sendResponse({ success: true }));\n        } else if (message.type === \"read\") {\n          const dom = appClientState[message.notebookPageId];\n          sendResponse({\n            html: dom ? dom.window.document.body.innerHTML : \"\",\n          });\n        } else if (message.type === \"unload\") {\n          unloadNotebookQuerying();\n          unloadSharePage();\n          unload();\n          sendResponse();\n          if (isForked) process.disconnect();\n        } else if (message.type === \"invite\") {\n          await Promise.all([\n            awaitLog(\"share-page-success\"),\n            inviteNotebookToPage({\n              notebookPageId: currentNotebookPageId,\n              notebookUuid: message.notebookUuid,\n            }),\n          ]).then(() => sendResponse());\n        } else if (message.type === \"waitForNotification\") {\n          await new Promise<Notification>((resolve) => {\n            const offAppEvent = onAppEvent(\"notification\", (e) => {\n              offAppEvent();\n              resolve(e.notification);\n            });\n          }).then((data) => {\n            sendResponse(data);\n          });\n        } else if (message.type === \"insert\") {\n          const dom = appClientState[message.notebookPageId];\n          const el = dom.window.document.querySelector(message.path);\n          if (!el) {\n            onMessage({\n              type: \"error\",\n              data: `Failed to insert: cannot find ${message.path}\\nDom: ${dom.window.document.body.innerHTML}`,\n            });\n          } else if (TAG_SET.has(message.content)) {\n            const newEl = dom.window.document.createElement(\n              message.content.toLowerCase()\n            );\n            const index = Number(message.index);\n            if (index >= el.children.length) {\n              el.appendChild(newEl);\n            } else {\n              el.insertBefore(newEl, el.children[index]);\n            }\n          } else if (typeof message.index === \"string\") {\n            el.setAttribute(message.index, message.content);\n          } else {\n            const oldContent = el.textContent || \"\";\n            el.textContent = `${oldContent.slice(0, message.index)}${\n              message.content\n            }${oldContent.slice(message.index)}`;\n          }\n          if (el) {\n            if (message.delay) {\n              const newDoc = await calculateState(message.notebookPageId);\n              return load(message.notebookPageId).then((oldDoc) => {\n                const doc = Automerge.change(\n                  oldDoc,\n                  \"refresh\",\n                  async (oldDoc) => {\n                    changeAutomergeDoc(oldDoc, newDoc);\n                  }\n                );\n                set(message.notebookPageId, doc);\n                const updateUuid = v4();\n                updatesToSend[updateUuid] = {\n                  method: \"update-shared-page\",\n                  changes: Automerge.getChanges(oldDoc, doc).map(\n                    binaryToBase64\n                  ),\n                  notebookPageId: message.notebookPageId,\n                  state: binaryToBase64(Automerge.save(doc)),\n                };\n                sendResponse({ success: true, delayed: updateUuid });\n              });\n            }\n            await refreshContent({\n              notebookPageId: message.notebookPageId,\n            }).then(() => sendResponse({ success: true }));\n          }\n        } else if (message.type === \"delete\") {\n          const dom = appClientState[message.notebookPageId];\n          const el = dom.window.document.body.querySelector(message.path);\n          if (el) {\n            if (message.count === 0) {\n              el.remove();\n            } else {\n              const oldContent = el.textContent || \"\";\n              el.textContent = `${oldContent.slice(\n                0,\n                message.index\n              )}${oldContent.slice(message.index + message.count)}`;\n            }\n            await refreshContent({\n              notebookPageId: message.notebookPageId,\n            }).then(() => sendResponse({ success: false }));\n          } else {\n            onMessage({\n              type: \"error\",\n              data: `Failed to delete: cannot find ${message.path}`,\n            });\n          }\n        } else if (message.type === \"resume\") {\n          const body = updatesToSend[message.update];\n          if (body) {\n            await apiClient(body);\n            sendResponse({ success: true });\n          } else {\n            sendResponse({ success: false });\n          }\n        } else if (message.type === \"disconnect\") {\n          const awaitDisconnect = awaitLog(\"samepage-disconnect\");\n          commands[\"Disconnect from SamePage Network\"]();\n          awaitDisconnect.then(() => sendResponse());\n        } else if (message.type === \"connect\") {\n          commands[\"Connect to SamePage Network\"]();\n          awaitLog(\"samepage-success\").then(() => sendResponse());\n        } else if (message.type === \"break\") {\n          applyState = () =>\n            Promise.reject(new Error(\"Something went wrong...\"));\n          sendResponse();\n        } else if (message.type === \"fix\") {\n          applyState = defaultApplyState;\n          sendResponse();\n        } else if (message.type === \"breakCalculate\") {\n          // @ts-expect-error\n          calculateState = async () => ({\n            content: \"Invalid\",\n            annotations: [{ type: \"invalid\", start: 0, end: 7 }],\n          });\n          sendResponse();\n        } else if (message.type === \"fixCalculate\") {\n          calculateState = defaultCalculateState;\n          sendResponse();\n        } else if (message.type === \"awaitLog\") {\n          await awaitLog(message.id).then(sendResponse);\n        } else if (message.type === \"getSharedPage\") {\n          await apiClient<{ state: string }>({\n            method: \"get-shared-page\",\n            notebookPageId: message.notebookPageId,\n          })\n            .then(({ state }) => {\n              const data = Automerge.load<Schema>(\n                base64ToBinary(state) as Automerge.BinaryDocument\n              );\n              sendResponse(unwrapSchema(data));\n            })\n            .catch((e) => {\n              return {\n                type: \"response\",\n                uuid: message.uuid,\n                data: e.message,\n              };\n            });\n        } else if (message.type === \"refresh\") {\n          await applyState(message.notebookPageId, message.data);\n          await refreshContent({ notebookPageId: message.notebookPageId });\n          sendResponse({ success: true });\n        } else if (message.type === \"query\") {\n          const data = await query(message.request);\n          sendResponse(data);\n        } else if (message.type === \"route\") {\n          addNotebookRequestListener(({ request }) => {\n            log(`Was requested ${JSON.stringify(request)}`);\n            const route = message.routes.find(\n              (rte) => request[rte.key] === rte.value\n            );\n            return route?.response;\n          });\n          sendResponse();\n        } else if (message.type === \"request\") {\n          const id = v4();\n          const response = await sendNotebookRequest({\n            label: `Test ${id}`,\n            request: message.request,\n            target: message.target,\n          });\n          sendResponse({ response, id });\n        } else {\n          onMessage({\n            type: \"error\",\n            data: `Unknown message type: ${message[\"type\"]}`,\n          });\n        }\n      } catch (e) {\n        onMessage({\n          type: \"error\",\n          data: (e as Error).stack || (e as Error).message,\n        });\n      }\n    },\n  };\n};\n\nif (isForked) {\n  if (process.argv.length > forkedIndex + 2)\n    createTestSamePageClient({\n      workspace: process.argv[forkedIndex + 1],\n      initOptions: {\n        email: process.argv[forkedIndex + 2],\n        password: process.argv[forkedIndex + 3],\n        create: process.argv.indexOf(\"--create\") > -1,\n      },\n      onMessage: process.send!.bind(process),\n    })\n      .then((client) => {\n        process.on(\"message\", client.send);\n        process.on(\"unhandledRejection\", (e) => {\n          process.send?.({\n            type: \"error\",\n            data: `UNHANDLED REJECTION: ${(e as Error)?.stack}`,\n          });\n        });\n        process.on(\"uncaughtException\", (e) => {\n          process.send?.({ type: \"error\", data: `UNCAUGHT EXCEPTION: ${e}` });\n        });\n      })\n      .catch((e) => {\n        process.send?.({\n          type: \"error\",\n          data: (e as Error).stack || (e as Error).message,\n        });\n      });\n  else {\n    process.send?.({\n      type: \"error\",\n      data: `Error: 3 arguments required for --forked (workspace, notebook id, token)\\nFound: ${process.argv}`,\n    });\n  }\n}\n\nexport default createTestSamePageClient;\n"]}