{"version":3,"file":"test.js","sourceRoot":"","sources":["../../package/scripts/test.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs\";\nimport { spawn } from \"child_process\";\nimport { S3 } from \"@aws-sdk/client-s3\";\nimport compile, { CliOpts } from \"./internal/compile\";\nimport toVersion from \"./internal/toVersion\";\nimport getPackageName from \"./internal/getPackageName\";\nimport mime from \"mime-types\";\nimport { z } from \"zod\";\nimport os from \"os\";\n\nconst shell = os.platform() === \"win32\";\nconst zTestArgs = z.object({\n  forward: z.string().or(z.string().array()).optional(),\n  path: z.string().optional(),\n  unit: z.boolean().optional(),\n  integration: z.boolean().optional(),\n});\n\nconst test = (args: CliOpts) => {\n  const {\n    forward,\n    path = getPackageName(),\n    unit,\n    integration,\n  } = zTestArgs.parse(args);\n  process.env.NODE_ENV = process.env.NODE_ENV || \"test\";\n  const isDebug = !!(process.env.DEBUG || process.env.PWDEBUG);\n  if (isDebug) process.env.DEBUG = process.env.DEBUG || process.env.PWDEBUG;\n  return compile({ opts: args })\n    .then(() => {\n      const config = fs.existsSync(\n        \"node_modules/@samepage/testing/playwright.config.js\"\n      )\n        ? [\"--config=./node_modules/@samepage/testing/playwright.config.js\"]\n        : fs.existsSync(\"node_modules/samepage/testing/playwright.config.js\")\n        ? [\"--config=./node_modules/samepage/testing/playwright.config.js\"]\n        : [];\n      // TODO - add a way to proc with debugger\n      const args = [\n        \"c8\",\n        \"--reporter=lcov\",\n        \"--reporter=text\",\n        \"--all\",\n        \"--include\",\n        \"src\",\n        \"--exclude\",\n        \"node_modules\",\n        \"--exclude-after-remap\",\n        \"playwright\",\n        \"test\",\n        ...config\n          .concat(typeof forward === \"string\" ? [forward] : forward || [])\n          .concat(isDebug && !process.env.CI ? [\"--debug\"] : [])\n          .concat(unit ? [\"--project=unit\"] : [])\n          .concat(integration ? [\"--project=integration\"] : []),\n      ];\n      const options = {\n        stdio: \"inherit\" as const,\n        env: process.env,\n        shell,\n      };\n      const proc = isDebug\n        ? spawn(\"npx\", [\"--inspect\"].concat(args), options)\n        : spawn(\"npx\", args, options);\n      return new Promise<number>((resolve, reject) => {\n        proc.on(\"exit\", (c) => {\n          resolve(c === null ? 1 : c);\n        });\n        proc.on(\"error\", (e) => {\n          console.error(\"error from playwright:\", e);\n          reject(e);\n        });\n      });\n    })\n    .catch((e) => {\n      console.error(\"Failed to run tests:\", e);\n      return 1;\n    })\n    .finally(() => {\n      // TODO - integrate with codecov, then we no longer need to block on AWS_REGION\n      if (process.env.CI && process.env.AWS_REGION) {\n        const s3 = new S3({});\n        const report = fs.createReadStream(\"playwright-report/index.html\");\n        const reportData = fs.existsSync(\"playwright-report/data\")\n          ? fs.readdirSync(\"playwright-report/data\")\n          : [];\n\n        const version = toVersion();\n        const root = \"extensions/tests\";\n        const Key = `${root}/${path}/${version}.html`;\n        return Promise.all(\n          [\n            s3.putObject({\n              Bucket: \"samepage.network\",\n              Key,\n              Body: report,\n              ContentType: \"text/html\",\n            }),\n          ].concat(\n            reportData.map((r) =>\n              s3.putObject({\n                Bucket: \"samepage.network\",\n                Key: `${root}/${path}/data/${r}`,\n                ContentType: mime.lookup(r) || undefined,\n                Body: fs.createReadStream(`playwright-report/data/${r}`),\n              })\n            )\n          )\n        )\n          .then(() =>\n            console.log(\n              `Latest test report can be found on: https://samepage.network/${Key}`\n            )\n          )\n          .catch((e) =>\n            console.log(\"Failed to upload test report\", Key, e.message)\n          );\n      }\n      return Promise.resolve();\n    });\n};\n\nexport default test;\n"]}