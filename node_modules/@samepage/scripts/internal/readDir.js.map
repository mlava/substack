{"version":3,"file":"readDir.js","sourceRoot":"","sources":["../../../package/scripts/internal/readDir.ts"],"names":[],"mappings":";;;AAAA,oDAAoB;AAEpB,MAAM,OAAO,GAAG,CAAC,CAAS,EAAY,EAAE,CACtC,YAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,YAAE;SACC,WAAW,CAAC,CAAC,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;SACvC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CACb,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CACjE;IACL,CAAC,CAAC,EAAE,CAAC;AAET,kBAAe,OAAO,CAAC","sourcesContent":["import fs from \"fs\";\n\nconst readDir = (s: string): string[] =>\n  fs.existsSync(s)\n    ? fs\n        .readdirSync(s, { withFileTypes: true })\n        .flatMap((f) =>\n          f.isDirectory() ? readDir(`${s}/${f.name}`) : [`${s}/${f.name}`]\n        )\n    : [];\n\nexport default readDir;\n"]}