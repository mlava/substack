{"version":3,"file":"nodeCompile.js","sourceRoot":"","sources":["../../../package/scripts/internal/nodeCompile.ts"],"names":[],"mappings":";;;;AAAA,8DAAgD;AAChD,wDAAwB;AACxB,oDAAoB;AACpB,gFAAgD;AAChD,8EAA8C;AAWvC,MAAM,OAAO,GAAG,CAAC,EACtB,MAAM,GAAG,OAAO,EAChB,SAAS,EACT,IAAI,GAAG,KAAK,EACZ,MAAM,GAAG,IAAA,yBAAe,GAAE,EAC1B,IAAI,GAAG,EAAE,EACT,QAAQ,GAAG,EAAE,GACR,EAAgB,EAAE,CAAC,CAAC;IACzB,MAAM,EAAE,IAAI;IACZ,MAAM;IACN,QAAQ,EAAE,MAAM;IAChB,QAAQ,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;IACzE,MAAM;IACN,WAAW,EAAE,MAAM,CAAC,WAAW,CAC7B,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,cAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CACtD;IACD,OAAO,EAAE;QACP;YACE,IAAI,EAAE,gBAAgB;YACtB,KAAK,CAAC,KAAK;gBACT,KAAK,CAAC,MAAM,CACV;oBACE,MAAM,EAAE,UAAU;iBACnB,EACD,KAAK,EAAE,IAAI,EAAE,EAAE;;oBACb,MAAM,eAAe,GAAG,YAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;oBAC9D,MAAM,aAAa,GAAG,MAAA,eAAe,CAAC,KAAK,CACzC,8BAA8B,CAC/B,0CAAG,CAAC,CAAC,CAAC;oBACP,MAAM,QAAQ,GAAG,aAAa;wBAC5B,CAAC,CAAC,GAAG,eAAe,0BAA0B,aAAa,EAAE;wBAC7D,CAAC,CAAC,eAAe,CAAC;oBACpB,OAAO;wBACL,QAAQ;wBACR,MAAM,EAAE,IAAI;qBACb,CAAC;gBACJ,CAAC,CACF,CAAC;YACJ,CAAC;SACF;QACD,GAAG,IAAA,wBAAc,EAAC,KAAK,CAAC;KACzB;IACD,GAAG,IAAI;CACR,CAAC,CAAC;AA3CU,QAAA,OAAO,WA2CjB;AAEH,MAAM,WAAW,GAAG,CAAC,IAAU,EAAE,EAAE,CAAC,iBAAO,CAAC,KAAK,CAAC,IAAA,eAAO,EAAC,IAAI,CAAC,CAAC,CAAC;AAEjE,kBAAe,WAAW,CAAC","sourcesContent":["import esbuild, { BuildOptions } from \"esbuild\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport getDotEnvObject from \"./getDotEnvObject\";\nimport esbuildPlugins from \"./esbuildPlugins\";\n\ntype Args = {\n  outdir?: string;\n  functions: string[];\n  root?: string;\n  define?: Record<string, string>;\n  opts?: esbuild.BuildOptions;\n  external?: string[];\n};\n\nexport const getOpts = ({\n  outdir = \"build\",\n  functions,\n  root = \"api\",\n  define = getDotEnvObject(),\n  opts = {},\n  external = [],\n}: Args): BuildOptions => ({\n  bundle: true,\n  outdir,\n  platform: \"node\",\n  external: [\"aws-sdk\", \"canvas\", \"@aws-sdk/*\", \"esbuild\"].concat(external),\n  define,\n  entryPoints: Object.fromEntries(\n    functions.map((f) => [f, path.join(root, `${f}.ts`)])\n  ),\n  plugins: [\n    {\n      name: \"lambda-adapter\",\n      setup(build) {\n        build.onLoad(\n          {\n            filter: /^.*\\.ts$/,\n          },\n          async (args) => {\n            const originalContent = fs.readFileSync(args.path).toString();\n            const defaultExport = originalContent.match(\n              /export\\s+default\\s+([^;]+);/s\n            )?.[1];\n            const contents = defaultExport\n              ? `${originalContent}export const handler = ${defaultExport}`\n              : originalContent;\n            return {\n              contents,\n              loader: \"ts\",\n            };\n          }\n        );\n      },\n    },\n    ...esbuildPlugins(\"api\"),\n  ],\n  ...opts,\n});\n\nconst nodeCompile = (args: Args) => esbuild.build(getOpts(args));\n\nexport default nodeCompile;\n"]}