"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOpts = void 0;
const tslib_1 = require("tslib");
const esbuild_1 = tslib_1.__importDefault(require("esbuild"));
const path_1 = tslib_1.__importDefault(require("path"));
const fs_1 = tslib_1.__importDefault(require("fs"));
const getDotEnvObject_1 = tslib_1.__importDefault(require("./getDotEnvObject"));
const esbuildPlugins_1 = tslib_1.__importDefault(require("./esbuildPlugins"));
const getOpts = ({ outdir = "build", functions, root = "api", define = (0, getDotEnvObject_1.default)(), opts = {}, external = [], }) => ({
    bundle: true,
    outdir,
    platform: "node",
    external: ["aws-sdk", "canvas", "@aws-sdk/*", "esbuild"].concat(external),
    define,
    entryPoints: Object.fromEntries(functions.map((f) => [f, path_1.default.join(root, `${f}.ts`)])),
    plugins: [
        {
            name: "lambda-adapter",
            setup(build) {
                build.onLoad({
                    filter: /^.*\.ts$/,
                }, async (args) => {
                    var _a;
                    const originalContent = fs_1.default.readFileSync(args.path).toString();
                    const defaultExport = (_a = originalContent.match(/export\s+default\s+([^;]+);/s)) === null || _a === void 0 ? void 0 : _a[1];
                    const contents = defaultExport
                        ? `${originalContent}export const handler = ${defaultExport}`
                        : originalContent;
                    return {
                        contents,
                        loader: "ts",
                    };
                });
            },
        },
        ...(0, esbuildPlugins_1.default)("api"),
    ],
    ...opts,
});
exports.getOpts = getOpts;
const nodeCompile = (args) => esbuild_1.default.build((0, exports.getOpts)(args));
exports.default = nodeCompile;
//# sourceMappingURL=nodeCompile.js.map