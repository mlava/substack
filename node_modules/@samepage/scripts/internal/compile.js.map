{"version":3,"file":"compile.js","sourceRoot":"","sources":["../../../package/scripts/internal/compile.ts"],"names":[],"mappings":"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","sourcesContent":["import esbuild from \"esbuild\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport os from \"os\";\nimport { z } from \"zod\";\nimport appPath from \"./appPath\";\nimport dotenv from \"dotenv\";\nimport toVersion from \"./toVersion\";\nimport readDir from \"./readDir\";\nimport { getOpts as getNodeOpts } from \"./nodeCompile\";\nimport getDotEnvObject from \"./getDotEnvObject\";\nimport esbuildPlugins from \"./esbuildPlugins\";\n// @ts-ignore\nimport { build as tw } from \"tailwindcss/lib/cli/build\";\ndotenv.config();\n\n// TODO - Move this to a central location\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      API_URL: string;\n      AWS_ENDPOINT?: string;\n      CLERK_PUBLISHABLE_KEY: string;\n      GITHUB_TOKEN: string;\n      NODE_ENV: \"development\" | \"production\" | \"test\";\n      ORIGIN: string;\n      STRIPE_PUBLIC_KEY: string;\n      STRIPE_SECRET_KEY: string;\n      PACKAGE_NAME: string;\n      SVIX_SECRET: string;\n    }\n  }\n}\n\nexport type CliOpts = Record<string, string | string[] | boolean>;\n\nconst cliArgs = z.object({\n  out: z.string().optional(),\n  root: z.string().optional(),\n  external: z.union([z.string(), z.string().array()]).optional(),\n  include: z.union([z.string(), z.string().array()]).optional(),\n  css: z.string().optional(),\n  format: z.enum([\"iife\", \"cjs\", \"esm\"]).optional(),\n  mirror: z.string().optional(),\n  analyze: z.boolean().optional(),\n  max: z.string().optional(),\n  finish: z.string().optional(),\n  entry: z.union([z.string(), z.string().array()]).optional(),\n  extends: z.string().optional(),\n});\n\nexport type CliArgs = z.infer<typeof cliArgs>;\n\nconst zPackageJson = z\n  .object({\n    name: z.string().optional().default(\"\"),\n  })\n  .optional()\n  .default({});\n\n// https://github.com/evanw/esbuild/issues/337#issuecomment-954633403\nconst importAsGlobals = (\n  mapping: Record<string, string> = {}\n): esbuild.Plugin => {\n  const escRe = (s: string) => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  const filter = new RegExp(\n    Object.keys(mapping).length\n      ? Object.keys(mapping)\n          .map((mod) => `^${escRe(mod)}$`)\n          .join(\"|\")\n      : /$^/\n  );\n\n  return {\n    name: \"global-imports\",\n    setup(build) {\n      build.onResolve({ filter }, (args) => {\n        if (!mapping[args.path]) {\n          throw new Error(\"Unknown global: \" + args.path);\n        }\n        return {\n          path: args.path,\n          namespace: \"external-global\",\n        };\n      });\n\n      build.onLoad(\n        {\n          filter,\n          namespace: \"external-global\",\n        },\n        async (args) => {\n          const global = mapping[args.path];\n          if (fs.existsSync(global)) {\n            return {\n              contents: fs.readFileSync(global).toString(),\n              loader: \"js\",\n              resolveDir: path.dirname(global),\n            };\n          }\n          return {\n            contents: `module.exports = ${global};`,\n            loader: \"js\",\n            resolveDir: process.cwd(),\n          };\n        }\n      );\n    },\n  };\n};\n\nconst DEFAULT_FILES_INCLUDED = [\"package.json\", \"README.md\"];\n\ntype Builder = (opts: esbuild.BuildOptions) => Promise<void>;\nconst compile = ({\n  builder = async (opts) => {\n    await esbuild.build(opts);\n  },\n  opts,\n}: {\n  opts: CliOpts;\n  builder?: Builder;\n}) => {\n  const {\n    root = \".\",\n    out,\n    external,\n    include,\n    css,\n    format,\n    mirror,\n    analyze,\n    finish: onFinishFile = \"\",\n    entry = [],\n  } = cliArgs.parse(opts);\n\n  const srcRoot = path.join(root, \"src\");\n  const apiRoot = path.join(root, \"api\");\n  const packageJsonPath = path.join(root, \"package.json\");\n  const packageJson = zPackageJson.parse(\n    fs.existsSync(packageJsonPath)\n      ? JSON.parse(fs.readFileSync(packageJsonPath).toString())\n      : {}\n  );\n  process.env.PACKAGE_NAME = process.env.PACKAGE_NAME || packageJson.name;\n  const rootDir = fs\n    .readdirSync(srcRoot, { withFileTypes: true })\n    .filter((f) => f.isFile())\n    .map((f) => f.name);\n  const rootTs = rootDir.filter((f) => /\\.tsx?$/.test(f));\n  const rootCss = rootDir.filter((f) => /\\.css$/.test(f));\n  const entryTs =\n    rootTs.length === 1\n      ? rootTs[0]\n      : [\"index.ts\", \"main.ts\"].find((f) => rootTs.includes(f));\n  const entryCss =\n    rootCss.length === 1\n      ? rootCss[0]\n      : [\"index.css\", \"main.css\"].find((f) => rootCss.includes(f));\n  const externalModules = (\n    typeof external === \"string\" ? [external] : external || []\n  ).map((e) => e.split(\"=\"));\n  const outdir = path.join(root, \"dist\");\n  const envObject = getDotEnvObject();\n  const apiFunctions = fs.existsSync(apiRoot)\n    ? readDir(apiRoot).map((f) => f.replace(/^api\\//, \"\").replace(/\\.ts$/, \"\"))\n    : [];\n  const backendOutdir = path.join(root, \"out\");\n\n  return Promise.all(\n    ([] as Promise<void>[])\n      .concat(\n        entryTs\n          ? [\n              builder({\n                absWorkingDir: process.cwd(),\n                entryPoints: [\n                  path.join(srcRoot, entryTs),\n                  ...(typeof entry === \"string\" ? [entry] : entry).map((e) =>\n                    path.join(srcRoot, e)\n                  ),\n                  ...(entryCss ? [path.join(srcRoot, entryCss)] : []),\n                ],\n                outdir,\n                bundle: true,\n                sourcemap:\n                  process.env.NODE_ENV === \"production\"\n                    ? undefined\n                    : process.env.NODE_ENV === \"test\"\n                    ? \"linked\"\n                    : \"inline\",\n                define: {\n                  \"process.env.BLUEPRINT_NAMESPACE\": '\"bp4\"',\n                  \"process.env.NODE_ENV\": `\"${process.env.NODE_ENV}\"`,\n                  \"process.env.VERSION\": `\"${toVersion()}\"`,\n                  \"process.env.ORIGIN\":\n                    process.env.NODE_ENV === \"production\"\n                      ? '\"https://samepage.network\"'\n                      : '\"http://localhost:3000\"',\n                  ...envObject,\n                },\n                format,\n                entryNames: out,\n                external: externalModules.map(([e]) => e).concat([\"crypto\"]),\n                plugins: [\n                  importAsGlobals(\n                    Object.fromEntries(\n                      externalModules\n                        .filter((e) => e.length > 1)\n                        .map(([e, ...g]) => [e, g.join(\"=\")])\n                    )\n                  ),\n                  {\n                    name: \"tailwind\",\n                    setup(build) {\n                      build.onResolve({ filter: /samepage\\.css$/ }, () => {\n                        return {\n                          path: \"samepage.css\",\n                          namespace: \"samepage\",\n                        };\n                      });\n                      build.onLoad(\n                        { filter: /samepage\\.css$/, namespace: \"samepage\" },\n                        async () => {\n                          const out = path.join(os.tmpdir(), \"tailwind.css\");\n                          await tw({\n                            _: [\"build\"],\n                            \"--config\": path.resolve(\n                              path.join(__dirname, \"..\"),\n                              \"tailwind.config.js\"\n                            ),\n                            \"--output\": out,\n                          });\n                          return {\n                            // TODO - rid of blueprint once we cut over fully to our own component library\n                            contents: `@import \"normalize.css\";\\n@import \"@blueprintjs/core/lib/css/blueprint.css\";\\n${fs\n                              .readFileSync(out)\n                              .toString()}`,\n                            loader: \"css\",\n                            resolveDir: process.cwd(),\n                          };\n                        }\n                      );\n                    },\n                  },\n                  ...esbuildPlugins(\"src\"),\n                  {\n                    name: \"onFinish\",\n                    setup(build) {\n                      build.onEnd(async () => {\n                        DEFAULT_FILES_INCLUDED.concat(\n                          typeof include === \"string\"\n                            ? [include]\n                            : include || []\n                        )\n                          .map((f) => path.join(root, f))\n                          .filter((f) => fs.existsSync(f))\n                          .forEach((f) => {\n                            fs.cpSync(f, path.join(outdir, path.basename(f)));\n                          });\n                        if (css) {\n                          const outCssFilename = path.join(\n                            outdir,\n                            `${css.replace(/.css$/, \"\")}.css`\n                          );\n                          const inputCssFiles = fs\n                            .readdirSync(outdir)\n                            .filter((f) => /.css$/.test(f));\n\n                          if (inputCssFiles.length === 0) {\n                            console.warn(\n                              `No css files in the ${outdir} directory`\n                            );\n                          } else if (inputCssFiles.length === 1) {\n                            fs.renameSync(\n                              path.join(outdir, inputCssFiles[0]),\n                              outCssFilename\n                            );\n                          } else {\n                            const baseOutput = path.basename(outCssFilename);\n                            if (!inputCssFiles.includes(baseOutput))\n                              fs.writeFileSync(outCssFilename, \"\");\n                            inputCssFiles.sort().forEach((f) => {\n                              if (baseOutput !== f) {\n                                const cssFileContent = fs\n                                  .readFileSync(path.join(outdir, f))\n                                  .toString();\n                                fs.rmSync(path.join(outdir, f));\n                                fs.appendFileSync(\n                                  outCssFilename,\n                                  cssFileContent\n                                );\n                                fs.appendFileSync(outCssFilename, \"\\n\");\n                              }\n                            });\n                            // hoist all imports to the top\n                            const outlines = fs\n                              .readFileSync(outCssFilename)\n                              .toString()\n                              .split(\"\\n\");\n                            const imports = outlines.filter((l) =>\n                              l.startsWith(\"@import\")\n                            );\n                            const rest = outlines.filter(\n                              (l) => !l.startsWith(\"@import\")\n                            );\n                            fs.writeFileSync(\n                              outCssFilename,\n                              imports.concat(rest).join(\"\\n\")\n                            );\n                          }\n                        }\n                        if (\n                          onFinishFile &&\n                          fs.existsSync(path.join(root, onFinishFile))\n                        ) {\n                          const customOnFinish = require(path.resolve(\n                            path.join(root, onFinishFile)\n                          ));\n                          if (typeof customOnFinish === \"function\") {\n                            customOnFinish();\n                          }\n                        }\n                        if (mirror) {\n                          const mirrorPath = path.resolve(root, mirror);\n                          if (!fs.existsSync(mirrorPath))\n                            fs.mkdirSync(mirrorPath, { recursive: true });\n                          readDir(outdir)\n                            .filter((f) => fs.existsSync(appPath(f)))\n                            .forEach((f) => {\n                              fs.cpSync(\n                                appPath(f),\n                                path.join(mirrorPath, path.relative(outdir, f))\n                              );\n                            });\n                        }\n                      });\n                    },\n                  },\n                ],\n                metafile: analyze,\n                loader: {\n                  \".woff\": \"file\",\n                  \".woff2\": \"file\",\n                  \".yaml\": \"text\",\n                },\n              }),\n            ]\n          : []\n      )\n      .concat(\n        apiFunctions.length\n          ? [\n              builder(\n                getNodeOpts({\n                  outdir: backendOutdir,\n                  functions: apiFunctions,\n                  root: apiRoot,\n                  define: envObject,\n                  external: externalModules\n                    .filter((e) => e.length === 1)\n                    .map((e) => e[0]),\n                })\n              ),\n            ]\n          : []\n      )\n  );\n};\n\nexport default compile;\n"]}