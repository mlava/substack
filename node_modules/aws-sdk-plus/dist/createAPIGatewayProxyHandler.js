"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
const excludeCors = (headers) => Object.fromEntries(Object.entries(headers).filter(([h]) => h.toLowerCase() !== "access-control-allow-origin"));
const createAPIGatewayProxyHandler = (fcn) => (event) => new Promise((resolve, reject) => {
    try {
        resolve(fcn(Object.assign(Object.assign(Object.assign({}, JSON.parse(event.body || "{}")), (event.queryStringParameters || {})), (event.requestContext.authorizer || {}))));
    }
    catch (e) {
        reject(e);
    }
})
    .then((_a) => {
    var { headers, code } = _a, res = __rest(_a, ["headers", "code"]);
    return ({
        statusCode: typeof code === "number" && code >= 200 && code < 400 ? code : 200,
        body: JSON.stringify(res),
        headers: Object.assign({ "Access-Control-Allow-Origin": process.env.HOST || "*" }, (typeof headers === "object" && headers
            ? excludeCors(headers)
            : {})),
    });
})
    .catch((e) => {
    console.error(e);
    return {
        statusCode: typeof e.code === "number" && e.code >= 400 && e.code < 600
            ? e.code
            : 500,
        body: e.message,
        headers: Object.assign({ "Access-Control-Allow-Origin": process.env.HOST || "*" }, (typeof e.headers === "object" ? excludeCors(e.headers) : {})),
    };
});
exports.default = createAPIGatewayProxyHandler;
